/* Assign pseudo component id range. This is optional. */
component_id: {
    start = 1;
    end = 9999;
};

/* Assign data queue size. Each data queue maintains only this number of entries.
   When the queue becomes full, the oldest entry is automatically dequeued. */
queue_size = 1;

/* Start pseudo component hierarchy (tree) */
component = {

    package: { // package
        library: {

            model = "3d-ice";
            thermal_analysis_type = "steady";
            ambient_temperature = 300.0;
            temperature = 300.0;
            chip_width = 6.0e-3; // 5mm
            chip_height = 5.0e-3; // 5mm
            grid_rows = 50;
            grid_columns = 50;
            grid_map_mode = "avg";
            generate_thermal_grid = false;

            material: {
                SILICON: {
                    thermal_conductivity = 1.5e-4;
                    volumetric_heat_capacity = 1.628e-12;
                };
            };

            conventional_heat_sink: {
                heat_transfer_coefficient = 0.15e-7;
            };

            microchannel: {
                type = "2rm";
                height = 100e-6;
                channel_length = 50e-6;
                wall_length = 50e-6;
                wall_material = "SILICON";
                coolant_flow_rate = 42;
                coolant_heat_transfer_coefficient_top = 5.7132e-8;
                coolant_heat_transfer_coefficient_bottom = 4.7132e-8;
                coolant_volumetric_heat_capacity = 4.172e-12;
                coolant_incoming_temperature = 300.0;
            };

            die: {
                PROC_IC: {
                    layer: {
                        // IMPORTANT: Layers must be listed sequentially from the top to bottom.
                        SOURCE_LAYER: {
                            height = 10e-6;
                            material = "SILICON";
                            is_source_layer = true;
                        };
                        BOTTOM_LAYER: {
                            height = 100e-6;
                            material = "SILICON";
                            is_source_layer = false;
                        };    
                    };
                };
                LLC_IC: {
                    layer: {
                        // IMPORTANT: Layers must be listed sequentially from the top to bottom.
                        SOURCE_LAYER: {
                            height = 20e-6;
                            material = "SILICON";
                            is_source_layer = true;
                        };
                        BOTTOM_LAYER: {
                            height = 100e-6;
                            material = "SILICON";
                            is_source_layer = false;
                        };    
                    };
                };
            };

            stack: {
                // IMPORTANT: Stacks must be listed sequentially from the top to bottom.
                top_most: {
                    type = "layer";
                    height = 50e-6;
                    material = "SILICON";
                    is_source_layer = false;
                };
                llc_die: {
                    type = "die";
                    die = "LLC_IC";
                };
                core_die: {
                    type = "die";
                    die = "PROC_IC";
                };
            };

            floorplan = ["package.core_die.core0",
                         "package.core_die.core1",
                         "package.core_die.core2",
                         "package.core_die.core3",
                         "package.core_die.l1cache0",
                         "package.core_die.l1cache1",
                         "package.core_die.l1cache2",
                         "package.core_die.l1cache3",
                         "package.llc_die.cache0",
                         "package.llc_die.cache1",
                         "package.llc_die.cache2",
                         "package.llc_die.cache3"];
	    }; /* End of "package" library */
            
        component: { // package component
            /* "package.core_die" component */
            core_die: {

                /* "package.core_die" includes the following components
                   as its sub-components (children). */
                component: {
                    
                    core0: {
                    //pthread_init = true;
                    /*************************************
                    These library settings are commonly
                    applied to core0 components.
                    *************************************/
                        library: {
                          # model = "failure";
                            model = "none";
                            feature_size = 16e-9;
                            voltage = 0.8;
                            clock_frequency = 1.0e9;
                            component_type = "core";
                            core_type = "ooo";
                            wire_type = "global";
                            wiring_type = "global";
                            device_type = "hp";
                            interconnect_projection = "aggressive";
                            opt_for_clk = false;
                            embedded = false;
                            longer_channel_device = false;
                            energy_scaling = 3.0;
                    
                            # failure_model: {
                            #     hci: {
                            #         n = 3.0;
                            #         Ea = -0.1;
                            #     };
                            #     em: {
                            #         n = 2.0;
                            #         Ea = 0.9;
                            #     };
                            #     nbti: {
                            #         n = 5.0;
                            #         Ea = 0.4;
                            #     };
                            #     sm: {
                            #         T0 = 500.0;
                            #         n = 2.5;
                            #         Ea = 0.9;
                            #     };
                            #     tddb: {
                            #         a = 78.0;
                            #         b = -0.081;
                            #         c = 0.1;
                            #         x = -0.759;
                            #         y = 66.8;
                            #         z = 8.37e-4;
                            #         Ea = 0.7;
                            #     };
                            # };

                            # target_temperature = 338; // 65'C
                            # target_voltage = 0.8; // 0.8V
                            # target_frequency = 2.0e9; // 2GHz
                            # target_MTTF = 5.048524800e9; // 5 years (in seconds) x 32 cores
                    
                            dimension: {
                                left = 0.0e-3;
                                bottom = 0.0e-3;
                                width = 2.5e-3;
                                height = 2.5e-3;
                                die_index = 0;
                                die_name = "core_die";
                            };
                        }; // package.core_die.core0.library
                
                        /*************************************
                        package.core_die.core0 components
                        *************************************/
                        component: {
                            /*************************************
                            L1 Branch Target Buffer:
                            8-byte line size (64-bit address)
                            4-way assoc
                            1KB size
                            32 sets
                            tag bits = virtual addreess(64 bits) + overhead (5 bits)
                            *************************************/
                            l1_btb: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 8;
                                    assoc = 4;
                                    size = 1024;
                                    tag_width = 69;
                                    num_rw_ports = 1;
                                    num_rd_ports = 1;
                                    num_wr_ports = 1;
                                    cycle_time = 1;
                                    access_time = 1;
                                    access_mode = "normal";
                                    };
                            }; // package.core_die.core0.l1_btb
                    
                            /*************************************
                            L2 Branch Target Buffer:
                            8-byte line size (64-bit address)
                            4-way assoc
                            4KB size
                            128 sets
                            tag bits = 64-bit address + 5-bit overhead
                            *************************************/
                            l2_btb: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 8;
                                    assoc = 4;
                                    size = 4096;
                                    tag_width = 69;
                                    num_rw_ports = 1;
                                    num_rd_ports = 1;
                                    num_wr_ports = 1;
                                    cycle_time = 1;
                                    access_time = 1;
                                    access_mode = "normal";
                                };
                            }; // package.core_die.core0.l2_btb
                    
                            /*************************************
                            Predictor Chooser:
                            2-bit line size (ceil'd to 1 byte)
                            4096 entries
                            *************************************/
                            predictor_chooser: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 1;
                                    output_width = 2;
                                    size = 4096;
                                    tag_width = 6;
                                    num_rd_ports = 1;
                                    num_wr_ports = 1;
                                    access_mode = "fast";
                                    adjust_area = true;
                                };
                            }; // package.core_die.core0.predictor_chooser
      
                            /*************************************
                            Global Predictor:
                            2-bit line size (ceil'd to 1 byte)
                            4096 entries
                            *************************************/
                            global_predictor: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 1;
                                    output_width = 2;
                                    size = 4096;
                                    tag_width = 6;
                                    num_rd_ports = 1;
                                    num_wr_ports = 1;
                                    access_mode = "fast";
                                    adjust_area = true;
                                };
                            }; // package.core_die.core0.global_predictor
                    
                            /*************************************
                            L1 Local Predictor:
                            10-bit line size (ceil'd to 2 byte)
                            1024 entries
                            *************************************/
                            l1_local_predictor: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 2;
                                    output_width = 10;
                                    size = 2048;
                                    tag_width = 6;
                                    num_rd_ports = 1;
                                    num_wr_ports = 1;
                                    access_mode = "fast";
                                    adjust_area = true;
                                };
                            }; // package.core_die.core0.l1_local_predictor

                            /*************************************
                            L2 Local Predictor:
                            2-bit line size (ceil'd to 1 byte)
                            1024 entries
                            *************************************/
                            l2_local_predictor: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 1;
                                    output_width = 2;
                                    size = 1024;
                                    tag_width = 6;
                                    num_rd_ports = 1;
                                    num_wr_ports = 1;
                                    access_mode = "fast";
                                    adjust_area = true;
                                };
                            }; // package.core_die.core0.l2_local_predictor

                            /*************************************
                            Return Address Stack:
                            8-byte line size (64-bit address)
                            16 entries
                            *************************************/
                            ras: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 8;
                                    size = 128;
                                    tag_width = 6;
                                    num_rd_ports = 1;
                                    num_wr_ports = 1;
                                    access_mode = "fast";
                                };
                            }; // package.core_die.core0.ras

                            /*************************************
                            Instruction Cache:
                            64-byte line size
                            4-way assoc
                            32KB size
                            128 sets
                            tag bits = physical address (52 bits) - log2(size/line_size/assoc) (7 bits)
                            - log2(line_size) (6 bits) + overhead (5 bits)
                            *************************************/
                            inst_cache: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 64;
                                    assoc = 4;
                                    size = 32768;
                                    tag_width = 44;
                                    num_rw_ports = 1;
                                    cycle_time = 1;
                                    access_time = 1;
                                    access_mode = "normal";
                                };
                            }; // package.core_die.core0.inst_cache

                            /*************************************
                            Instruction Cache Miss Buffer:
                            assoc = 0 (fully associative)
                            8 entries
                            line_size = {physical address (52 bits)
                            + inst_cache tag (log2(size/line_size) = 9 bits)
                            + inst_cache line_size (512 bits)}/8
                            tag bits = physical address (52 bits) + overhead (5 bits)
                            *************************************/
                            inst_cache_miss_buffer: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 72;
                                    assoc = 0;
                                    size = 576;
                                    tag_width = 57;
                                    num_rw_ports = 1;
                                    num_search_ports = 1;
                                    cycle_time = 1;
                                    access_time = 1;
                                    access_mode = "normal";
                                };
                            }; // package.core_die.core0.inst_cache_miss_buffer

                            /*************************************
                            Instruction Cache Prefetch Buffer:
                            assoc = 0 (fully associative)
                            8 entries
                            line_size = inst_cache line_size
                            tag bits = physical address (52 bits) + overhead (5 bits)
                            *************************************/
                            # inst_cache_prefetch_buffer: {
                            #     library: {
                            #         model = "mcpat";
                            #         energy_model = "array";
                            #         energy_submodel = "cache";
                            #         line_size = 64;
                            #         assoc = 0;
                            #         size = 512;
                            #         tag_width = 57;
                            #         num_rw_ports = 1;
                            #         num_search_ports = 1;
                            #         cycle_time = 1;
                            #         access_time = 1;
                            #         access_mode = "normal";
                            #     };
                            # }; // package.core_die.core0.inst_cache_prefetch_buffer

                            /*************************************
                            Instruction TLB:
                            4-way assoc
                            128 entries
                            line size = physical address / 8
                            tag bits = virtual address (64 bits) + overhead (5 bits)
                            *************************************/
                            inst_tlb: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 8;
                                    assoc = 4;
                                    size = 4096;
                                    tag_width = 69;
                                    num_rw_ports = 1;
                                    cycle_time = 1;
                                    access_time = 1;
                                    access_mode = "normal";
                                };
                            }; // package.core_die.core0.inst_tlb

                            /*************************************
                            Pipeline Latch (Instruction Cache to Instruction Buffer):
                            per_stage_vector = 16-byte fetch unit + pc (64 bits)
                            scaling = 4 (4 fetch width)
                            *************************************/
                            latch_ic2ib: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "pipeline";
                                    pipeline_stages = 1;
                                    per_stage_vector = 192;
                                    scaling = 4;
                                };
                            }; // package.core_die.core0.latch_ic2ib

                            /*************************************
                            Program Counter:
                            per_stage_vector = current pc (64 bits) + next pc (64 bits)
                            *************************************/
                            pc: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "pipeline";
                                    pipeline_stages = 1;
                                    per_stage_vector = 128;
                                };
                            }; // package.core_die.core0.pc

                            /*************************************
                            Instruction Buffer:
                            8-byte line size
                            16 entries
                            4 r/w ports (4 fetch width)
                            *************************************/
                            inst_buffer: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "ram";
                                    line_size = 8;
                                    size = 128;
                                    num_rd_ports = 4;
                                    num_wr_ports = 4;
                                    access_model = "normal";
                                };
                            }; // package.core_die.core0.inst_buffer

                            /*************************************
                            Pipeline Latch (Instruction Buffer to Instruction Decoder)
                            per_stage_vector = pc (64 bits) + instruction length (64 bits)
                            scaling = 4 (4 decode width)
                            *************************************/
                            latch_ib2id: {
                                library: {
                                model = "mcpat";
                                energy_model = "pipeline";
                                pipeline_stages = 1;
                                per_stage_vector = 128;
                                scaling = 4;
                                };
                            }; // package.core_die.core0.latch_ib2id

                            /*************************************
                            Instruction Decoder:
                            decode_length = 16-bit opcode
                            scaling = 4 decoders (4 decode width)
                            *************************************/
                            inst_decoder: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "inst_decoder";
                                    x86 = true;
                                    decode_length = 16;
                                    scaling = 4;
                                };
                            }; // package.core_die.core0.inst_decoder

                            /*************************************
                            Operand Decoder:
                            decode_length = 4-bit operand code
                            scaling = (2 input operands + 1 output operand) x (4 decode width)
                            *************************************/
                            operand_decoder: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "inst_decoder";
                                    x86 = true;
                                    decode_length = 4;
                                    scaling = 12;
                                };
                            }; // package.core_die.core0.operand_decoder

                            /*************************************
                            Micro-op Sequencer:
                            decode_length = 16-bit opcode
                            scaling = 1 (decode port 0)
                            *************************************/
                            uop_sequencer: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "inst_decoder";
                                    x86 = true;
                                    decode_length = 16;
                                    scaling = 1;
                                };
                            }; // package.core_die.core0.uop_sequencer

                            /*************************************
                            Pipeline Latch (Instruction Decoder to Micro-op Queue):
                            per_stage_vector = pc (64 bits) + opcode (16 bits) + 3 x operand code (4 bits)
                            + immediate/offset (64 bits)
                            pipeline_stages = 2 (decoder depth)
                            scaling = 4 (4 decode width)
                            *************************************/
                            latch_id2uq: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "pipeline";
                                    pipeline_stages = 2;
                                    per_stage_vector = 156;
                                    scaling = 4;
                                };
                            }; //package.core_die.core0.latch_id2uq

                            /*************************************
                            Micro-op Queue:
                            16-byte line size
                            28 entries
                            4 write ports (4 decode width)
                            6 read ports (6 issue width)
                            *************************************/
                            uop_queue: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "ram";
                                    line_size = 16;
                                    size = 448;
                                    num_rd_ports = 6;
                                    num_wr_ports = 4;
                                    access_mode = "normal";
                                };
                            }; // package.core_die.core0.uop_queue

                            /*************************************
                            Pipeline Latch (Micro-op Queue to Register Renaming Unit):
                            per_stage_vector = pc (64 bits) + opcode (16 bits) + 3 x operand code (4 bits)
                            + immediate/offset (64 bits)
                            scaling = 6 (6 issue width)
                            *************************************/
                            latch_uq2rr: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "pipeline";
                                    pipeline_stages = 1;
                                    per_stage_vector = 156;
                                    scaling = 6;
                                };
                            }; // package.core_die.core0.latch_uq2rat

                            /*************************************
                            Register Alias Table:
                            line size = 32 bytes (1 byte ROB tag x 32 checkpoints)
                            output size = 1 byte ROB tag
                            16 entries
                            8 read ports (2 operands x 4 decode width)
                            4 write ports (4 decode width)
                            *************************************/
                            rat: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "ram";
                                    line_size = 32;
                                    output_size = 8;
                                    size = 1024;
                                    num_rw_ports = 1;
                                    num_rd_ports = 8;
                                    num_wr_ports = 4;
                                    num_search_ports = 4;
                                    access_mode = "sequential";
                                    adjust_area = true;
                                };
                            }; // package.core_die.core0.rat

                            /*************************************
                            Free List:
                            1-bit line size (valid bit)
                            128 entries (ROB entries)
                            4 read/write ports (4 decode/commit width)
                            *************************************/
                            freelist: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "ram";
                                    line_size = 1;
                                    output_width = 1;
                                    size = 128;
                                    num_rw_ports = 1;
                                    num_rd_ports = 4;
                                    num_wr_ports = 4;
                                    adjust_area = true;
                                };
                            }; // package.core_die.core0.freelist

                            /*************************************
                            Dependency Check Logic:
                            4-bit operand code
                            scaling = 2 operands
                            *************************************/
                            dependency_check: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "dep_resource_conflict_check";
                                    compare_bits = 4;
                                    decode_width = 4;
                                    scaling = 2;
                                };
                            }; // package.core_die.core0.dependency_check

                            /*************************************
                            Pipeline Latch (Register Renaming Unit to Scheduler):
                            per_stage_vector = opcode (16 bits) + 3 x operand tags (8 bits) + 2 operands (64 bits)
                            + immediate/offset (64 bits)
                            pipeline_stages = 2 (renaming steps)
                            scaling = 6 (6 issue width)
                            *************************************/
                            latch_rr2rs: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "pipeline";
                                    pipeline_stages = 2;
                                    per_stage_vector = 232;
                                    scaling = 6;
                                };
                            }; // package.core_die.core0.latch_rr2rs

                            /*************************************
                            Reservation Station:
                            line size = {opcode (16 bits) + 2 x src operand tags (8 bits)
                            + 2 x src operands (64 bits)}/8.0
                            assoc = 0 (fully associative)
                            36 entries
                            tag bits = dest operand tag (8 bits)
                            6 read/write ports (6 issue width)
                            *************************************/
                            rs: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 20;
                                    assoc = 0;
                                    size = 720;
                                    tag_width = 8;
                                    num_rd_ports = 6;
                                    num_wr_ports = 6;
                                    num_search_ports = 6;
                                    cycle_time = 1;
                                    access_time = 1;
                                    access_model = "normal";
                                };
                            }; // package.core_die.core0.rs

                            /*************************************
                            Issue Selection Logic:
                            selection input: RS entries
                            selection output: issue width
                            *************************************/
                            issue_select: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "selection_logic";
                                    selection_input = 36;
                                    selection_output = 6;
                                };
                            }; // package.core_die.core0.issue_select

                            /*************************************
                            Pipeline Latch (Scheduler to Execute Unit)
                            per_stage_vector = opcode (16 bits) + 3 x operand tags (8 bits) + 2 x operands (64 bits)
                            + immediate/offset (64 bits)
                            scaling = 6 (6 issue width)
                            *************************************/
                            latch_rs2ex: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "pipeline";
                                    pipeline_stages = 1;
                                    per_stage_vector = 232;
                                    scaling = 6;
                                };
                            }; // package.core_die.core0.latch_rs2ex

                            /*************************************
                            Integer Register:
                            line size = 64 bits
                            16 entries
                            12 read ports (2 operands x 6 issue width)
                            4 write ports (4 commit width)
                            *************************************/
                            reg_int: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "ram";
                                    line_size = 8;
                                    size = 128;
                                    num_rw_ports = 1;
                                    num_rd_ports = 12;
                                    num_wr_ports = 4;
                                    access_mode = "sequential";
                                    area_scaling = 1.1;
                                };
                            }; // package.core_die.core0.reg_int

                            /*************************************
                            Floating-Point Register:
                            line size = 80 bits
                            16 entries
                            4 read port (2 operands x 2 fp-issue width)
                            2 write ports (2 fp-commit width)
                            *************************************/
                            reg_fp: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "ram";
                                    line_size = 10;
                                    size = 160;
                                    num_rw_ports = 1;
                                    num_rd_ports = 4;
                                    num_wr_ports = 2;
                                    acceess_mode = "sequential";
                                    area_scaling = 1.1;
                                };
                            }; // package.core_die.core0.reg_fp

                            /*************************************
                            Reorder Buffer
                            lines size = {pc/ip (64 bits) + dest operand tag (8 bits) + data (64 bits)
                            + tag overhead (5 bits)}/8.0
                            128 entries
                            6 read/write ports (6 issue width)
                            4 r/w ports (4 commit width)
                            *************************************/
                            rob: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "ram";
                                    line_size = 18;
                                    size = 2304;
                                    num_rw_ports = 4;
                                    num_rd_ports = 6;
                                    num_wr_ports = 6;
                                    cycle_time = 1;
                                    access_time = 1;
                                    access_mode = "sequential";
                                };
                            }; // package.core_die.core0.rob

                            /*************************************
                            Pipeline Latch (Reorder Buffer[Physical Register] to RS)
                            per_stage_vector = operand tag (8 bits) + data (64 bits)
                            scaling = 12 (2 operands x 6 issue width)
                            *************************************/
                            latch_rob2rs: {
                                library: {
                                model = "mcpat";
                                energy_model = "pipeline";
                                pipeline_stages = 1;
                                per_stage_vector = 72;
                                scaling = 12;
                                };
                            }; // package.core_die.core0.latch_rob2rs

                            /*************************************
                            Pipeline Latch (Reorder Buffer to Register File)
                            per_stage_vector = operand tag (8 bits) + data (64 bits)
                            scaling = 4 (4 commit width)
                            *************************************/
                            latch_rob2reg: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "pipeline";
                                    pipeline_stages = 1;
                                    per_stage_vector = 72;
                                    scaling = 4;
                                };
                            }; // package.core_die.core0.latch_rob2reg

                            /*************************************
                            Integer ALU:
                            6 ALU(s)
                            *************************************/
                            alu: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "functional_unit";
                                    energy_submodel = "alu";
                                    scaling = 6;
                                };
                            }; // package.core_die.core0.alu

                            /*************************************
                            Integer MUL/DIV:
                            1 integer mul/div unit(s)
                            *************************************/
                            mul: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "functional_unit";
                                    energy_submodel = "mul";
                                    scaling = 1;
                                    };
                            }; // package.core_die.core0.mul

                            /*************************************
                            Integer Data/Tag Bypass Wire:
                            connects to ALU, RS, ROB
                            data width = data (64 bits) + dest operand tag (8 bits)
                            *************************************/
                            int_bypass: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "interconnect";
                                    data_width = 72;
                                    connect = ["package.core_die.core0.alu",
                                               "package.core_die.core0.rs",
                                               "package.core_die.core0.rob"];
                                    scaling = 6;
                                };
                            }; // package.core_die.core0.int_bypass

                            /*************************************
                            Pipeline Latch (Execution Unit to ROB):
                            per_stage_vector = opcode (16 bits) + dest operand tag (8 bits) + data (64 bits)
                            pipeline_stages = 1 (integer delay)
                            scaling = 6 (6 issue width)
                            *************************************/
                            latch_ex_int2rob: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "pipeline";
                                    pipeline_stages = 1;
                                    per_stage_vector = 88;
                                    scaling = 6;
                                };
                            }; // package.core_die.core0.latch_ex_int2rob

                            /*************************************
                            Floating-Point Unit:
                            2 FPU(s)
                            *************************************/
                            fpu: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "functional_unit";
                                    energy_submodel = "fpu";
                                    scaling = 2;
                                };
                            }; // package.core_die.core0.fpu

                            /*************************************
                            Floating-Point Data/Tag Bypass Wire:
                            connects to FPU, RS, ROB
                            data width = data (80 bits) + dest operand tag (8 bits)
                            *************************************/
                            fp_bypass: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "interconnect";
                                    data_width = 88;
                                    connect = ["package.core_die.core0.fpu",
                                               "package.core_die.core0.rs",
                                               "package.core_die.core0.rob"];
                                    scaling = 2;
                                };
                            }; // package.core_die.core0.fp_bypass

                            /*************************************
                            Pipeline Latch (Execution Unit to ROB):
                            per_stage_vector = opcode (16 bits) + dest operand tag (8 bits) + data (80 bits)
                            pipeline_stages = 3 (floating-point delay)
                            scaling = 2 (2 fp-issue width)
                            *************************************/
                            latch_ex_fp2rob: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "pipeline";
                                    pipeline_stages = 3;
                                    per_stage_vector = 104;
                                    scaling = 2;
                                };
                            }; // package.core_die.core0.latch_ex_fp2rob

                            /*************************************
                            Store Queue:
                            line size = {vaddr (64 bits) + data (64 bits) + operand tag (8 bits)}/8.0
                            assco = 0 (fully associative)
                            32 entries
                            tag bits = vaddr (64 bits) + overhead (5 bits)
                            *************************************/
                            stq: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 17;
                                    assoc = 0;
                                    size = 544;
                                    tag_width = 69;
                                    num_rd_ports = 1;
                                    num_wr_ports = 1;
                                    num_search_ports = 1;
                                    access_mode = "sequential";
                                    area_scaling = 1.1;
                                };
                            }; // package.core_die.core0.stq

                            /*************************************
                            Pipeline Latch (Store Queue to Cache):
                            per_stage_vector = vaddr (64 bits) + data (64 bits)
                            *************************************/
                            latch_stq2dcache: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "pipeline";
                                    pipeline_stages = 1;
                                    per_stage_vector = 128;
                                    scaling = 1;
                                };
                            }; // package.core_die.core0.latch_stq2dcache

                            /*************************************
                            Pipeline Latch (Store Queue to Load Queue):
                            per_stage_vector = vaddr (64 bits) + data (64 bits)
                            *************************************/
                            latch_stq2ldq: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "pipeline";
                                    pipeline_stages = 1;
                                    per_stage_vector = 128;
                                    scaling = 1;
                                };
                            }; // package.core_die.core0.latch_stq2ldq

                            /*************************************
                            Load Queue:
                            line size = {vaddr (64 bits) + data (64 bits) + operand tag (8 bits)}/8.0
                            assco = 0 (fully associative)
                            48 entries
                            tag bits = vaddr (64 bits) + overhead (5 bits)
                            *************************************/
                            ldq: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 17;
                                    assoc = 0;
                                    size = 816;
                                    tag_width = 69;
                                    num_rd_ports = 1;
                                    num_wr_ports = 1;
                                    num_search_ports = 1;
                                    access_mode = "sequential";
                                    area_scaling = 1.1;
                                };
                            }; // package.core_die.core0.ldq

                            /*************************************
                            Pipeline Latch (Load Queue to Cache):
                            per_stage_vector = vaddr (64 bits) + data (64 bits)
                            *************************************/
                            latch_ldq2dcache: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "pipeline";
                                    pipeline_stages = 1;
                                    per_stage_vector = 128;
                                    scaling = 1;
                                };
                            }; // package.core_die.core0.latch_ldq2dcache

                            /*************************************
                            Pipeline Latch (Load Queue to RS/ROB):
                            per_stage_vector = operand tag (8 bits) + data (64 bits)
                            *************************************/
                            latch_ldq2rs: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "pipeline";
                                    pipeline_stages = 1;
                                    per_stage_vector = 72;
                                    scaling = 1;
                                };
                            }; // package.core_die.core0.latch_ldq2rs

                            /*************************************
                            Data Cache:
                            64-byte line size
                            4-way assoc
                            32KB size
                            128 sets
                            tag bits = physical address (52 bits) - log2(size/line_size/assoc) (7 bits)
                            - log2(line_size) (6 bits) + overhead (5 bits)
                            *************************************/
                            data_cache: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 64;
                                    assoc = 4;
                                    size = 32768;
                                    tag_width = 44;
                                    num_rw_ports = 1;
                                    cycle_time = 1;
                                    access_time = 1;
                                    access_mode = "normal";
                                };
                            }; // package.core_die.core0.data_cache

                            /*************************************
                            Data Cache Miss Buffer:
                            assoc = 0 (fully associative)
                            8 entries
                            line_size = {physical address (52 bits)
                            + data_cache tag (log2(size/line_size) = 9 bits)
                            + data_cache line_size (512 bits)}/8
                            tag bits = physical address (52 bits) + overhead (5 bits)
                            *************************************/
                            data_cache_miss_buffer: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 72;
                                    assoc = 0;
                                    size = 576;
                                    tag_width = 57;
                                    num_rw_ports = 1;
                                    num_search_ports = 1;
                                    cycle_time = 1;
                                    access_time = 1;
                                    access_mode = "normal";
                                };
                            }; // package.core_die.core0.data_cache_miss_buffer

                            /*************************************
                            Data Cache Prefetch Buffer:
                            assoc = 0 (fully associative)
                            8 entries
                            line_size = data_cache line_size
                            tag bits = physical address (52 bits) + overhead (5 bits)
                            *************************************/
                            data_cache_prefetch_buffer: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 64;
                                    assoc = 0;
                                    size = 512;
                                    tag_width = 57;
                                    num_rw_ports = 1;
                                    num_search_ports = 1;
                                    cycle_time = 1;
                                    access_time = 1;
                                    access_mode = "normal";
                                };
                            }; // package.core_die.core0.data_cache_prefetch_buffer

                            /*************************************
                            Data Cache Writeback Buffer:
                            assoc = 0 (fully associative)
                            8 entries
                            line_size = data_cache line_size
                            tag bits = physical address (52 bits) + overhead (5 bits)
                            *************************************/
                            data_cache_writeback_buffer: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 64;
                                    assoc = 0;
                                    size = 512;
                                    tag_width = 57;
                                    num_rw_ports = 1;
                                    num_search_ports = 1;
                                    cycle_time = 1;
                                    access_time = 1;
                                    access_mode = "normal";
                                };
                            }; // package.core_die.core0.data_cache_prefetch_buffer

                            /*************************************
                            Data TLB:
                            4-way assoc
                            128 entries
                            line_size = physical address / 8
                            tag bits = virtual address (64 bits) + overhead (5 bits)
                            *************************************/
                            data_tlb: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 8;
                                    assoc = 4;
                                    size = 4096;
                                    tag_width = 69;
                                    num_rw_ports = 1;
                                    cycle_time = 1;
                                    access_time = 1;
                                    access_mode = "normal";
                                };
                            }; // package.core_die.core0.data_tlb

                            /*************************************
                            L2 TLB:
                            8-way assoc
                            256 entries
                            line_size = physical address / 8
                            tag bits = virtual address (64 bits) + overhead (5 bits)
                            *************************************/
                            l2_tlb: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 8;
                                    assoc = 8;
                                    size = 16384;
                                    tag_width = 69;
                                    num_rw_ports = 1;
                                    cycle_time = 1;
                                    access_time = 1;
                                    access_mode = "normal";
                                };
                            }; // package.core_die.core0.l2_tlb

                            /*************************************
                            Undifferentiated Core (Non-Functional Portion):
                            *************************************/
                            undiff: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "undiff_core";
                                    pipeline_stages = 32;
                                    issue_width = 6;
                                    scaling = 0.41;
                                };
                            }; // package.core_die.core0.undiff
                        }; // package.core_die.core0.component
                    }; // package.core_die.core0

                    core1: {
                    //pthread_init = true;
                    /*************************************
                    These library settings are commonly
                    applied to core1 components.
                    *************************************/
                        library: {
                          # model = "failure";
                            model = "none";
                            feature_size = 16e-9;
                            voltage = 0.8;
                            clock_frequency = 1.0e9;
                            component_type = "core";
                            core_type = "ooo";
                            wire_type = "global";
                            wiring_type = "global";
                            device_type = "hp";
                            interconnect_projection = "aggressive";
                            opt_for_clk = false;
                            embedded = false;
                            longer_channel_device = false;
                            energy_scaling = 3.0;

                            # failure_model: {
                            #     hci: {
                            #         n = 3.0;
                            #         Ea = -0.1;
                            #     };
                            #     em: {
                            #         n = 2.0;
                            #         Ea = 0.9;
                            #     };
                            #     nbti: {
                            #         n = 5.0;
                            #         Ea = 0.4;
                            #     };
                            #     sm: {
                            #         T0 = 500.0;
                            #         n = 2.5;
                            #         Ea = 0.9;
                            #     };
                            #     tddb: {
                            #         a = 78.0;
                            #         b = -0.081;
                            #         c = 0.1;
                            #         x = -0.759;
                            #         y = 66.8;
                            #         z = 8.37e-4;
                            #         Ea = 0.7;
                            #     };
                            # };

                            # target_temperature = 338; // 65'C
                            # target_voltage = 0.8; // 0.8V
                            # target_frequency = 2.0e9; // 2GHz
                            # target_MTTF = 5.048524800e9; // 5 years (in seconds) x 32 cores

                            dimension: {
                                left = 3.5e-3;
                                bottom = 0.0e-3;
                                width = 2.5e-3;
                                height = 2.5e-3;
                                die_index = 0;
                                die_name = "core_die";
                            };
                        }; // package.core_die.core1.library

                        /*************************************
                        package.core_die.core1 components
                        *************************************/
                        component: {
                            /*************************************
                            L1 Branch Target Buffer:
                            8-byte line size (64-bit address)
                            4-way assoc
                            1KB size
                            32 sets
                            tag bits = virtual addreess(64 bits) + overhead (5 bits)
                            *************************************/
                            l1_btb: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 8;
                                    assoc = 4;
                                    size = 1024;
                                    tag_width = 69;
                                    num_rw_ports = 1;
                                    num_rd_ports = 1;
                                    num_wr_ports = 1;
                                    cycle_time = 1;
                                    access_time = 1;
                                    access_mode = "normal";
                                    };
                            }; // package.core_die.core1.l1_btb

                            /*************************************
                            L2 Branch Target Buffer:
                            8-byte line size (64-bit address)
                            4-way assoc
                            4KB size
                            128 sets
                            tag bits = 64-bit address + 5-bit overhead
                            *************************************/
                            l2_btb: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 8;
                                    assoc = 4;
                                    size = 4096;
                                    tag_width = 69;
                                    num_rw_ports = 1;
                                    num_rd_ports = 1;
                                    num_wr_ports = 1;
                                    cycle_time = 1;
                                    access_time = 1;
                                    access_mode = "normal";
                                };
                            }; // package.core_die.core1.l2_btb

                            /*************************************
                            Predictor Chooser:
                            2-bit line size (ceil'd to 1 byte)
                            4096 entries
                            *************************************/
                            predictor_chooser: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 1;
                                    output_width = 2;
                                    size = 4096;
                                    tag_width = 6;
                                    num_rd_ports = 1;
                                    num_wr_ports = 1;
                                    access_mode = "fast";
                                    adjust_area = true;
                                };
                            }; // package.core_die.core1.predictor_chooser

                            /*************************************
                            Global Predictor:
                            2-bit line size (ceil'd to 1 byte)
                            4096 entries
                            *************************************/
                            global_predictor: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 1;
                                    output_width = 2;
                                    size = 4096;
                                    tag_width = 6;
                                    num_rd_ports = 1;
                                    num_wr_ports = 1;
                                    access_mode = "fast";
                                    adjust_area = true;
                                };
                            }; // package.core_die.core1.global_predictor

                            /*************************************
                            L1 Local Predictor:
                            10-bit line size (ceil'd to 2 byte)
                            1024 entries
                            *************************************/
                            l1_local_predictor: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 2;
                                    output_width = 10;
                                    size = 2048;
                                    tag_width = 6;
                                    num_rd_ports = 1;
                                    num_wr_ports = 1;
                                    access_mode = "fast";
                                    adjust_area = true;
                                };
                            }; // package.core_die.core1.l1_local_predictor

                            /*************************************
                            L2 Local Predictor:
                            2-bit line size (ceil'd to 1 byte)
                            1024 entries
                            *************************************/
                            l2_local_predictor: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 1;
                                    output_width = 2;
                                    size = 1024;
                                    tag_width = 6;
                                    num_rd_ports = 1;
                                    num_wr_ports = 1;
                                    access_mode = "fast";
                                    adjust_area = true;
                                };
                            }; // package.core_die.core1.l2_local_predictor

                            /*************************************
                            Return Address Stack:
                            8-byte line size (64-bit address)
                            16 entries
                            *************************************/
                            ras: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 8;
                                    size = 128;
                                    tag_width = 6;
                                    num_rd_ports = 1;
                                    num_wr_ports = 1;
                                    access_mode = "fast";
                                };
                            }; // package.core_die.core1.ras

                            /*************************************
                            Instruction Cache:
                            64-byte line size
                            4-way assoc
                            32KB size
                            128 sets
                            tag bits = physical address (52 bits) - log2(size/line_size/assoc) (7 bits)
                            - log2(line_size) (6 bits) + overhead (5 bits)
                            *************************************/
                            inst_cache: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 64;
                                    assoc = 4;
                                    size = 32768;
                                    tag_width = 44;
                                    num_rw_ports = 1;
                                    cycle_time = 1;
                                    access_time = 1;
                                    access_mode = "normal";
                                };
                            }; // package.core_die.core1.inst_cache

                            /*************************************
                            Instruction Cache Miss Buffer:
                            assoc = 0 (fully associative)
                            8 entries
                            line_size = {physical address (52 bits)
                            + inst_cache tag (log2(size/line_size) = 9 bits)
                            + inst_cache line_size (512 bits)}/8
                            tag bits = physical address (52 bits) + overhead (5 bits)
                            *************************************/
                            inst_cache_miss_buffer: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 72;
                                    assoc = 0;
                                    size = 576;
                                    tag_width = 57;
                                    num_rw_ports = 1;
                                    num_search_ports = 1;
                                    cycle_time = 1;
                                    access_time = 1;
                                    access_mode = "normal";
                                };
                            }; // package.core_die.core1.inst_cache_miss_buffer

                            /*************************************
                            Instruction Cache Prefetch Buffer:
                            assoc = 0 (fully associative)
                            8 entries
                            line_size = inst_cache line_size
                            tag bits = physical address (52 bits) + overhead (5 bits)
                            *************************************/
                            # inst_cache_prefetch_buffer: {
                            #     library: {
                            #         model = "mcpat";
                            #         energy_model = "array";
                            #         energy_submodel = "cache";
                            #         line_size = 64;
                            #         assoc = 0;
                            #         size = 512;
                            #         tag_width = 57;
                            #         num_rw_ports = 1;
                            #         num_search_ports = 1;
                            #         cycle_time = 1;
                            #         access_time = 1;
                            #         access_mode = "normal";
                            #     };
                            # }; // package.core_die.core1.inst_cache_prefetch_buffer

                            /*************************************
                            Instruction TLB:
                            4-way assoc
                            128 entries
                            line size = physical address / 8
                            tag bits = virtual address (64 bits) + overhead (5 bits)
                            *************************************/
                            inst_tlb: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 8;
                                    assoc = 4;
                                    size = 4096;
                                    tag_width = 69;
                                    num_rw_ports = 1;
                                    cycle_time = 1;
                                    access_time = 1;
                                    access_mode = "normal";
                                };
                            }; // package.core_die.core1.inst_tlb

                            /*************************************
                            Pipeline Latch (Instruction Cache to Instruction Buffer):
                            per_stage_vector = 16-byte fetch unit + pc (64 bits)
                            scaling = 4 (4 fetch width)
                            *************************************/
                            latch_ic2ib: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "pipeline";
                                    pipeline_stages = 1;
                                    per_stage_vector = 192;
                                    scaling = 4;
                                };
                            }; // package.core_die.core1.latch_ic2ib

                            /*************************************
                            Program Counter:
                            per_stage_vector = current pc (64 bits) + next pc (64 bits)
                            *************************************/
                            pc: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "pipeline";
                                    pipeline_stages = 1;
                                    per_stage_vector = 128;
                                };
                            }; // package.core_die.core1.pc

                            /*************************************
                            Instruction Buffer:
                            8-byte line size
                            16 entries
                            4 r/w ports (4 fetch width)
                            *************************************/
                            inst_buffer: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "ram";
                                    line_size = 8;
                                    size = 128;
                                    num_rd_ports = 4;
                                    num_wr_ports = 4;
                                    access_model = "normal";
                                };
                            }; // package.core_die.core1.inst_buffer

                            /*************************************
                            Pipeline Latch (Instruction Buffer to Instruction Decoder)
                            per_stage_vector = pc (64 bits) + instruction length (64 bits)
                            scaling = 4 (4 decode width)
                            *************************************/
                            latch_ib2id: {
                                library: {
                                model = "mcpat";
                                energy_model = "pipeline";
                                pipeline_stages = 1;
                                per_stage_vector = 128;
                                scaling = 4;
                                };
                            }; // package.core_die.core1.latch_ib2id

                            /*************************************
                            Instruction Decoder:
                            decode_length = 16-bit opcode
                            scaling = 4 decoders (4 decode width)
                            *************************************/
                            inst_decoder: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "inst_decoder";
                                    x86 = true;
                                    decode_length = 16;
                                    scaling = 4;
                                };
                            }; // package.core_die.core1.inst_decoder

                            /*************************************
                            Operand Decoder:
                            decode_length = 4-bit operand code
                            scaling = (2 input operands + 1 output operand) x (4 decode width)
                            *************************************/
                            operand_decoder: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "inst_decoder";
                                    x86 = true;
                                    decode_length = 4;
                                    scaling = 12;
                                };
                            }; // package.core_die.core1.operand_decoder

                            /*************************************
                            Micro-op Sequencer:
                            decode_length = 16-bit opcode
                            scaling = 1 (decode port 0)
                            *************************************/
                            uop_sequencer: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "inst_decoder";
                                    x86 = true;
                                    decode_length = 16;
                                    scaling = 1;
                                };
                            }; // package.core_die.core1.uop_sequencer

                            /*************************************
                            Pipeline Latch (Instruction Decoder to Micro-op Queue):
                            per_stage_vector = pc (64 bits) + opcode (16 bits) + 3 x operand code (4 bits)
                            + immediate/offset (64 bits)
                            pipeline_stages = 2 (decoder depth)
                            scaling = 4 (4 decode width)
                            *************************************/
                            latch_id2uq: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "pipeline";
                                    pipeline_stages = 2;
                                    per_stage_vector = 156;
                                    scaling = 4;
                                };
                            }; //package.core_die.core1.latch_id2uq

                            /*************************************
                            Micro-op Queue:
                            16-byte line size
                            28 entries
                            4 write ports (4 decode width)
                            6 read ports (6 issue width)
                            *************************************/
                            uop_queue: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "ram";
                                    line_size = 16;
                                    size = 448;
                                    num_rd_ports = 6;
                                    num_wr_ports = 4;
                                    access_mode = "normal";
                                };
                            }; // package.core_die.core1.uop_queue

                            /*************************************
                            Pipeline Latch (Micro-op Queue to Register Renaming Unit):
                            per_stage_vector = pc (64 bits) + opcode (16 bits) + 3 x operand code (4 bits)
                            + immediate/offset (64 bits)
                            scaling = 6 (6 issue width)
                            *************************************/
                            latch_uq2rr: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "pipeline";
                                    pipeline_stages = 1;
                                    per_stage_vector = 156;
                                    scaling = 6;
                                };
                            }; // package.core_die.core1.latch_uq2rat

                            /*************************************
                            Register Alias Table:
                            line size = 32 bytes (1 byte ROB tag x 32 checkpoints)
                            output size = 1 byte ROB tag
                            16 entries
                            8 read ports (2 operands x 4 decode width)
                            4 write ports (4 decode width)
                            *************************************/
                            rat: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "ram";
                                    line_size = 32;
                                    output_size = 8;
                                    size = 1024;
                                    num_rw_ports = 1;
                                    num_rd_ports = 8;
                                    num_wr_ports = 4;
                                    num_search_ports = 4;
                                    access_mode = "sequential";
                                    adjust_area = true;
                                };
                            }; // package.core_die.core1.rat

                            /*************************************
                            Free List:
                            1-bit line size (valid bit)
                            128 entries (ROB entries)
                            4 read/write ports (4 decode/commit width)
                            *************************************/
                            freelist: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "ram";
                                    line_size = 1;
                                    output_width = 1;
                                    size = 128;
                                    num_rw_ports = 1;
                                    num_rd_ports = 4;
                                    num_wr_ports = 4;
                                    adjust_area = true;
                                };
                            }; // package.core_die.core1.freelist

                            /*************************************
                            Dependency Check Logic:
                            4-bit operand code
                            scaling = 2 operands
                            *************************************/
                            dependency_check: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "dep_resource_conflict_check";
                                    compare_bits = 4;
                                    decode_width = 4;
                                    scaling = 2;
                                };
                            }; // package.core_die.core1.dependency_check

                            /*************************************
                            Pipeline Latch (Register Renaming Unit to Scheduler):
                            per_stage_vector = opcode (16 bits) + 3 x operand tags (8 bits) + 2 operands (64 bits)
                            + immediate/offset (64 bits)
                            pipeline_stages = 2 (renaming steps)
                            scaling = 6 (6 issue width)
                            *************************************/
                            latch_rr2rs: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "pipeline";
                                    pipeline_stages = 2;
                                    per_stage_vector = 232;
                                    scaling = 6;
                                };
                            }; // package.core_die.core1.latch_rr2rs

                            /*************************************
                            Reservation Station:
                            line size = {opcode (16 bits) + 2 x src operand tags (8 bits)
                            + 2 x src operands (64 bits)}/8.0
                            assoc = 0 (fully associative)
                            36 entries
                            tag bits = dest operand tag (8 bits)
                            6 read/write ports (6 issue width)
                            *************************************/
                            rs: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 20;
                                    assoc = 0;
                                    size = 720;
                                    tag_width = 8;
                                    num_rd_ports = 6;
                                    num_wr_ports = 6;
                                    num_search_ports = 6;
                                    cycle_time = 1;
                                    access_time = 1;
                                    access_model = "normal";
                                };
                            }; // package.core_die.core1.rs

                            /*************************************
                            Issue Selection Logic:
                            selection input: RS entries
                            selection output: issue width
                            *************************************/
                            issue_select: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "selection_logic";
                                    selection_input = 36;
                                    selection_output = 6;
                                };
                            }; // package.core_die.core1.issue_select

                            /*************************************
                            Pipeline Latch (Scheduler to Execute Unit)
                            per_stage_vector = opcode (16 bits) + 3 x operand tags (8 bits) + 2 x operands (64 bits)
                            + immediate/offset (64 bits)
                            scaling = 6 (6 issue width)
                            *************************************/
                            latch_rs2ex: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "pipeline";
                                    pipeline_stages = 1;
                                    per_stage_vector = 232;
                                    scaling = 6;
                                };
                            }; // package.core_die.core1.latch_rs2ex

                            /*************************************
                            Integer Register:
                            line size = 64 bits
                            16 entries
                            12 read ports (2 operands x 6 issue width)
                            4 write ports (4 commit width)
                            *************************************/
                            reg_int: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "ram";
                                    line_size = 8;
                                    size = 128;
                                    num_rw_ports = 1;
                                    num_rd_ports = 12;
                                    num_wr_ports = 4;
                                    access_mode = "sequential";
                                    area_scaling = 1.1;
                                };
                            }; // package.core_die.core1.reg_int

                            /*************************************
                            Floating-Point Register:
                            line size = 80 bits
                            16 entries
                            4 read port (2 operands x 2 fp-issue width)
                            2 write ports (2 fp-commit width)
                            *************************************/
                            reg_fp: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "ram";
                                    line_size = 10;
                                    size = 160;
                                    num_rw_ports = 1;
                                    num_rd_ports = 4;
                                    num_wr_ports = 2;
                                    acceess_mode = "sequential";
                                    area_scaling = 1.1;
                                };
                            }; // package.core_die.core1.reg_fp

                            /*************************************
                            Reorder Buffer
                            lines size = {pc/ip (64 bits) + dest operand tag (8 bits) + data (64 bits)
                            + tag overhead (5 bits)}/8.0
                            128 entries
                            6 read/write ports (6 issue width)
                            4 r/w ports (4 commit width)
                            *************************************/
                            rob: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "ram";
                                    line_size = 18;
                                    size = 2304;
                                    num_rw_ports = 4;
                                    num_rd_ports = 6;
                                    num_wr_ports = 6;
                                    cycle_time = 1;
                                    access_time = 1;
                                    access_mode = "sequential";
                                };
                            }; // package.core_die.core1.rob

                            /*************************************
                            Pipeline Latch (Reorder Buffer[Physical Register] to RS)
                            per_stage_vector = operand tag (8 bits) + data (64 bits)
                            scaling = 12 (2 operands x 6 issue width)
                            *************************************/
                            latch_rob2rs: {
                                library: {
                                model = "mcpat";
                                energy_model = "pipeline";
                                pipeline_stages = 1;
                                per_stage_vector = 72;
                                scaling = 12;
                                };
                            }; // package.core_die.core1.latch_rob2rs

                            /*************************************
                            Pipeline Latch (Reorder Buffer to Register File)
                            per_stage_vector = operand tag (8 bits) + data (64 bits)
                            scaling = 4 (4 commit width)
                            *************************************/
                            latch_rob2reg: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "pipeline";
                                    pipeline_stages = 1;
                                    per_stage_vector = 72;
                                    scaling = 4;
                                };
                            }; // package.core_die.core1.latch_rob2reg

                            /*************************************
                            Integer ALU:
                            6 ALU(s)
                            *************************************/
                            alu: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "functional_unit";
                                    energy_submodel = "alu";
                                    scaling = 6;
                                };
                            }; // package.core_die.core1.alu

                            /*************************************
                            Integer MUL/DIV:
                            1 integer mul/div unit(s)
                            *************************************/
                            mul: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "functional_unit";
                                    energy_submodel = "mul";
                                    scaling = 1;
                                    };
                            }; // package.core_die.core1.mul

                            /*************************************
                            Integer Data/Tag Bypass Wire:
                            connects to ALU, RS, ROB
                            data width = data (64 bits) + dest operand tag (8 bits)
                            *************************************/
                            int_bypass: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "interconnect";
                                    data_width = 72;
                                    connect = ["package.core_die.core1.alu",
                                               "package.core_die.core1.rs",
                                               "package.core_die.core1.rob"];
                                    scaling = 6;
                                };
                            }; // package.core_die.core1.int_bypass

                            /*************************************
                            Pipeline Latch (Execution Unit to ROB):
                            per_stage_vector = opcode (16 bits) + dest operand tag (8 bits) + data (64 bits)
                            pipeline_stages = 1 (integer delay)
                            scaling = 6 (6 issue width)
                            *************************************/
                            latch_ex_int2rob: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "pipeline";
                                    pipeline_stages = 1;
                                    per_stage_vector = 88;
                                    scaling = 6;
                                };
                            }; // package.core_die.core1.latch_ex_int2rob

                            /*************************************
                            Floating-Point Unit:
                            2 FPU(s)
                            *************************************/
                            fpu: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "functional_unit";
                                    energy_submodel = "fpu";
                                    scaling = 2;
                                };
                            }; // package.core_die.core1.fpu

                            /*************************************
                            Floating-Point Data/Tag Bypass Wire:
                            connects to FPU, RS, ROB
                            data width = data (80 bits) + dest operand tag (8 bits)
                            *************************************/
                            fp_bypass: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "interconnect";
                                    data_width = 88;
                                    connect = ["package.core_die.core1.fpu",
                                               "package.core_die.core1.rs",
                                               "package.core_die.core1.rob"];
                                    scaling = 2;
                                };
                            }; // package.core_die.core1.fp_bypass

                            /*************************************
                            Pipeline Latch (Execution Unit to ROB):
                            per_stage_vector = opcode (16 bits) + dest operand tag (8 bits) + data (80 bits)
                            pipeline_stages = 3 (floating-point delay)
                            scaling = 2 (2 fp-issue width)
                            *************************************/
                            latch_ex_fp2rob: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "pipeline";
                                    pipeline_stages = 3;
                                    per_stage_vector = 104;
                                    scaling = 2;
                                };
                            }; // package.core_die.core1.latch_ex_fp2rob

                            /*************************************
                            Store Queue:
                            line size = {vaddr (64 bits) + data (64 bits) + operand tag (8 bits)}/8.0
                            assco = 0 (fully associative)
                            32 entries
                            tag bits = vaddr (64 bits) + overhead (5 bits)
                            *************************************/
                            stq: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 17;
                                    assoc = 0;
                                    size = 544;
                                    tag_width = 69;
                                    num_rd_ports = 1;
                                    num_wr_ports = 1;
                                    num_search_ports = 1;
                                    access_mode = "sequential";
                                    area_scaling = 1.1;
                                };
                            }; // package.core_die.core1.stq

                            /*************************************
                            Pipeline Latch (Store Queue to Cache):
                            per_stage_vector = vaddr (64 bits) + data (64 bits)
                            *************************************/
                            latch_stq2dcache: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "pipeline";
                                    pipeline_stages = 1;
                                    per_stage_vector = 128;
                                    scaling = 1;
                                };
                            }; // package.core_die.core1.latch_stq2dcache

                            /*************************************
                            Pipeline Latch (Store Queue to Load Queue):
                            per_stage_vector = vaddr (64 bits) + data (64 bits)
                            *************************************/
                            latch_stq2ldq: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "pipeline";
                                    pipeline_stages = 1;
                                    per_stage_vector = 128;
                                    scaling = 1;
                                };
                            }; // package.core_die.core1.latch_stq2ldq

                            /*************************************
                            Load Queue:
                            line size = {vaddr (64 bits) + data (64 bits) + operand tag (8 bits)}/8.0
                            assco = 0 (fully associative)
                            48 entries
                            tag bits = vaddr (64 bits) + overhead (5 bits)
                            *************************************/
                            ldq: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 17;
                                    assoc = 0;
                                    size = 816;
                                    tag_width = 69;
                                    num_rd_ports = 1;
                                    num_wr_ports = 1;
                                    num_search_ports = 1;
                                    access_mode = "sequential";
                                    area_scaling = 1.1;
                                };
                            }; // package.core_die.core1.ldq

                            /*************************************
                            Pipeline Latch (Load Queue to Cache):
                            per_stage_vector = vaddr (64 bits) + data (64 bits)
                            *************************************/
                            latch_ldq2dcache: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "pipeline";
                                    pipeline_stages = 1;
                                    per_stage_vector = 128;
                                    scaling = 1;
                                };
                            }; // package.core_die.core1.latch_ldq2dcache

                            /*************************************
                            Pipeline Latch (Load Queue to RS/ROB):
                            per_stage_vector = operand tag (8 bits) + data (64 bits)
                            *************************************/
                            latch_ldq2rs: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "pipeline";
                                    pipeline_stages = 1;
                                    per_stage_vector = 72;
                                    scaling = 1;
                                };
                            }; // package.core_die.core1.latch_ldq2rs

                            /*************************************
                            Data Cache:
                            64-byte line size
                            4-way assoc
                            32KB size
                            128 sets
                            tag bits = physical address (52 bits) - log2(size/line_size/assoc) (7 bits)
                            - log2(line_size) (6 bits) + overhead (5 bits)
                            *************************************/
                            data_cache: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 64;
                                    assoc = 4;
                                    size = 32768;
                                    tag_width = 44;
                                    num_rw_ports = 1;
                                    cycle_time = 1;
                                    access_time = 1;
                                    access_mode = "normal";
                                };
                            }; // package.core_die.core1.data_cache

                            /*************************************
                            Data Cache Miss Buffer:
                            assoc = 0 (fully associative)
                            8 entries
                            line_size = {physical address (52 bits)
                            + data_cache tag (log2(size/line_size) = 9 bits)
                            + data_cache line_size (512 bits)}/8
                            tag bits = physical address (52 bits) + overhead (5 bits)
                            *************************************/
                            data_cache_miss_buffer: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 72;
                                    assoc = 0;
                                    size = 576;
                                    tag_width = 57;
                                    num_rw_ports = 1;
                                    num_search_ports = 1;
                                    cycle_time = 1;
                                    access_time = 1;
                                    access_mode = "normal";
                                };
                            }; // package.core_die.core1.data_cache_miss_buffer

                            /*************************************
                            Data Cache Prefetch Buffer:
                            assoc = 0 (fully associative)
                            8 entries
                            line_size = data_cache line_size
                            tag bits = physical address (52 bits) + overhead (5 bits)
                            *************************************/
                            data_cache_prefetch_buffer: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 64;
                                    assoc = 0;
                                    size = 512;
                                    tag_width = 57;
                                    num_rw_ports = 1;
                                    num_search_ports = 1;
                                    cycle_time = 1;
                                    access_time = 1;
                                    access_mode = "normal";
                                };
                            }; // package.core_die.core1.data_cache_prefetch_buffer

                            /*************************************
                            Data Cache Writeback Buffer:
                            assoc = 0 (fully associative)
                            8 entries
                            line_size = data_cache line_size
                            tag bits = physical address (52 bits) + overhead (5 bits)
                            *************************************/
                            data_cache_writeback_buffer: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 64;
                                    assoc = 0;
                                    size = 512;
                                    tag_width = 57;
                                    num_rw_ports = 1;
                                    num_search_ports = 1;
                                    cycle_time = 1;
                                    access_time = 1;
                                    access_mode = "normal";
                                };
                            }; // package.core_die.core1.data_cache_prefetch_buffer

                            /*************************************
                            Data TLB:
                            4-way assoc
                            128 entries
                            line_size = physical address / 8
                            tag bits = virtual address (64 bits) + overhead (5 bits)
                            *************************************/
                            data_tlb: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 8;
                                    assoc = 4;
                                    size = 4096;
                                    tag_width = 69;
                                    num_rw_ports = 1;
                                    cycle_time = 1;
                                    access_time = 1;
                                    access_mode = "normal";
                                };
                            }; // package.core_die.core1.data_tlb

                            /*************************************
                            L2 TLB:
                            8-way assoc
                            256 entries
                            line_size = physical address / 8
                            tag bits = virtual address (64 bits) + overhead (5 bits)
                            *************************************/
                            l2_tlb: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 8;
                                    assoc = 8;
                                    size = 16384;
                                    tag_width = 69;
                                    num_rw_ports = 1;
                                    cycle_time = 1;
                                    access_time = 1;
                                    access_mode = "normal";
                                };
                            }; // package.core_die.core1.l2_tlb

                            /*************************************
                            Undifferentiated Core (Non-Functional Portion):
                            *************************************/
                            undiff: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "undiff_core";
                                    pipeline_stages = 32;
                                    issue_width = 6;
                                    scaling = 0.41;
                                };
                            }; // package.core_die.core1.undiff
                        }; // package.core_die.core1.component
                    }; // package.core_die.core1

                    core2: {
                    //pthread_init = true;
                    /*************************************
                    These library settings are commonly
                    applied to core2 components.
                    *************************************/
                        library: {
                          # model = "failure";
                            model = "none";
                            feature_size = 16e-9;
                            voltage = 0.8;
                            clock_frequency = 1.0e9;
                            component_type = "core";
                            core_type = "ooo";
                            wire_type = "global";
                            wiring_type = "global";
                            device_type = "hp";
                            interconnect_projection = "aggressive";
                            opt_for_clk = false;
                            embedded = false;
                            longer_channel_device = false;
                            energy_scaling = 3.0;

                            # failure_model: {
                            #     hci: {
                            #         n = 3.0;
                            #         Ea = -0.1;
                            #     };
                            #     em: {
                            #         n = 2.0;
                            #         Ea = 0.9;
                            #     };
                            #     nbti: {
                            #         n = 5.0;
                            #         Ea = 0.4;
                            #     };
                            #     sm: {
                            #         T0 = 500.0;
                            #         n = 2.5;
                            #         Ea = 0.9;
                            #     };
                            #     tddb: {
                            #         a = 78.0;
                            #         b = -0.081;
                            #         c = 0.1;
                            #         x = -0.759;
                            #         y = 66.8;
                            #         z = 8.37e-4;
                            #         Ea = 0.7;
                            #     };
                            # };

                            # target_temperature = 338; // 65'C
                            # target_voltage = 0.8; // 0.8V
                            # target_frequency = 2.0e9; // 2GHz
                            # target_MTTF = 5.048524800e9; // 5 years (in seconds) x 32 cores

                            dimension: {
                                left = 0.0e-3;
                                bottom = 2.5e-3;
                                width = 2.5e-3;
                                height = 2.5e-3;
                                die_index = 0;
                                die_name = "core_die";
                            };
                        }; // package.core_die.core2.library

                        /*************************************
                        package.core_die.core2 components
                        *************************************/
                        component: {
                            /*************************************
                            L1 Branch Target Buffer:
                            8-byte line size (64-bit address)
                            4-way assoc
                            1KB size
                            32 sets
                            tag bits = virtual addreess(64 bits) + overhead (5 bits)
                            *************************************/
                            l1_btb: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 8;
                                    assoc = 4;
                                    size = 1024;
                                    tag_width = 69;
                                    num_rw_ports = 1;
                                    num_rd_ports = 1;
                                    num_wr_ports = 1;
                                    cycle_time = 1;
                                    access_time = 1;
                                    access_mode = "normal";
                                    };
                            }; // package.core_die.core2.l1_btb

                            /*************************************
                            L2 Branch Target Buffer:
                            8-byte line size (64-bit address)
                            4-way assoc
                            4KB size
                            128 sets
                            tag bits = 64-bit address + 5-bit overhead
                            *************************************/
                            l2_btb: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 8;
                                    assoc = 4;
                                    size = 4096;
                                    tag_width = 69;
                                    num_rw_ports = 1;
                                    num_rd_ports = 1;
                                    num_wr_ports = 1;
                                    cycle_time = 1;
                                    access_time = 1;
                                    access_mode = "normal";
                                };
                            }; // package.core_die.core2.l2_btb

                            /*************************************
                            Predictor Chooser:
                            2-bit line size (ceil'd to 1 byte)
                            4096 entries
                            *************************************/
                            predictor_chooser: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 1;
                                    output_width = 2;
                                    size = 4096;
                                    tag_width = 6;
                                    num_rd_ports = 1;
                                    num_wr_ports = 1;
                                    access_mode = "fast";
                                    adjust_area = true;
                                };
                            }; // package.core_die.core2.predictor_chooser

                            /*************************************
                            Global Predictor:
                            2-bit line size (ceil'd to 1 byte)
                            4096 entries
                            *************************************/
                            global_predictor: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 1;
                                    output_width = 2;
                                    size = 4096;
                                    tag_width = 6;
                                    num_rd_ports = 1;
                                    num_wr_ports = 1;
                                    access_mode = "fast";
                                    adjust_area = true;
                                };
                            }; // package.core_die.core2.global_predictor

                            /*************************************
                            L1 Local Predictor:
                            10-bit line size (ceil'd to 2 byte)
                            1024 entries
                            *************************************/
                            l1_local_predictor: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 2;
                                    output_width = 10;
                                    size = 2048;
                                    tag_width = 6;
                                    num_rd_ports = 1;
                                    num_wr_ports = 1;
                                    access_mode = "fast";
                                    adjust_area = true;
                                };
                            }; // package.core_die.core2.l1_local_predictor

                            /*************************************
                            L2 Local Predictor:
                            2-bit line size (ceil'd to 1 byte)
                            1024 entries
                            *************************************/
                            l2_local_predictor: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 1;
                                    output_width = 2;
                                    size = 1024;
                                    tag_width = 6;
                                    num_rd_ports = 1;
                                    num_wr_ports = 1;
                                    access_mode = "fast";
                                    adjust_area = true;
                                };
                            }; // package.core_die.core2.l2_local_predictor

                            /*************************************
                            Return Address Stack:
                            8-byte line size (64-bit address)
                            16 entries
                            *************************************/
                            ras: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 8;
                                    size = 128;
                                    tag_width = 6;
                                    num_rd_ports = 1;
                                    num_wr_ports = 1;
                                    access_mode = "fast";
                                };
                            }; // package.core_die.core2.ras

                            /*************************************
                            Instruction Cache:
                            64-byte line size
                            4-way assoc
                            32KB size
                            128 sets
                            tag bits = physical address (52 bits) - log2(size/line_size/assoc) (7 bits)
                            - log2(line_size) (6 bits) + overhead (5 bits)
                            *************************************/
                            inst_cache: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 64;
                                    assoc = 4;
                                    size = 32768;
                                    tag_width = 44;
                                    num_rw_ports = 1;
                                    cycle_time = 1;
                                    access_time = 1;
                                    access_mode = "normal";
                                };
                            }; // package.core_die.core2.inst_cache

                            /*************************************
                            Instruction Cache Miss Buffer:
                            assoc = 0 (fully associative)
                            8 entries
                            line_size = {physical address (52 bits)
                            + inst_cache tag (log2(size/line_size) = 9 bits)
                            + inst_cache line_size (512 bits)}/8
                            tag bits = physical address (52 bits) + overhead (5 bits)
                            *************************************/
                            inst_cache_miss_buffer: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 72;
                                    assoc = 0;
                                    size = 576;
                                    tag_width = 57;
                                    num_rw_ports = 1;
                                    num_search_ports = 1;
                                    cycle_time = 1;
                                    access_time = 1;
                                    access_mode = "normal";
                                };
                            }; // package.core_die.core2.inst_cache_miss_buffer

                            /*************************************
                            Instruction Cache Prefetch Buffer:
                            assoc = 0 (fully associative)
                            8 entries
                            line_size = inst_cache line_size
                            tag bits = physical address (52 bits) + overhead (5 bits)
                            *************************************/
                            # inst_cache_prefetch_buffer: {
                            #     library: {
                            #         model = "mcpat";
                            #         energy_model = "array";
                            #         energy_submodel = "cache";
                            #         line_size = 64;
                            #         assoc = 0;
                            #         size = 512;
                            #         tag_width = 57;
                            #         num_rw_ports = 1;
                            #         num_search_ports = 1;
                            #         cycle_time = 1;
                            #         access_time = 1;
                            #         access_mode = "normal";
                            #     };
                            # }; // package.core_die.core2.inst_cache_prefetch_buffer

                            /*************************************
                            Instruction TLB:
                            4-way assoc
                            128 entries
                            line size = physical address / 8
                            tag bits = virtual address (64 bits) + overhead (5 bits)
                            *************************************/
                            inst_tlb: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 8;
                                    assoc = 4;
                                    size = 4096;
                                    tag_width = 69;
                                    num_rw_ports = 1;
                                    cycle_time = 1;
                                    access_time = 1;
                                    access_mode = "normal";
                                };
                            }; // package.core_die.core2.inst_tlb

                            /*************************************
                            Pipeline Latch (Instruction Cache to Instruction Buffer):
                            per_stage_vector = 16-byte fetch unit + pc (64 bits)
                            scaling = 4 (4 fetch width)
                            *************************************/
                            latch_ic2ib: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "pipeline";
                                    pipeline_stages = 1;
                                    per_stage_vector = 192;
                                    scaling = 4;
                                };
                            }; // package.core_die.core2.latch_ic2ib

                            /*************************************
                            Program Counter:
                            per_stage_vector = current pc (64 bits) + next pc (64 bits)
                            *************************************/
                            pc: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "pipeline";
                                    pipeline_stages = 1;
                                    per_stage_vector = 128;
                                };
                            }; // package.core_die.core2.pc

                            /*************************************
                            Instruction Buffer:
                            8-byte line size
                            16 entries
                            4 r/w ports (4 fetch width)
                            *************************************/
                            inst_buffer: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "ram";
                                    line_size = 8;
                                    size = 128;
                                    num_rd_ports = 4;
                                    num_wr_ports = 4;
                                    access_model = "normal";
                                };
                            }; // package.core_die.core2.inst_buffer

                            /*************************************
                            Pipeline Latch (Instruction Buffer to Instruction Decoder)
                            per_stage_vector = pc (64 bits) + instruction length (64 bits)
                            scaling = 4 (4 decode width)
                            *************************************/
                            latch_ib2id: {
                                library: {
                                model = "mcpat";
                                energy_model = "pipeline";
                                pipeline_stages = 1;
                                per_stage_vector = 128;
                                scaling = 4;
                                };
                            }; // package.core_die.core2.latch_ib2id

                            /*************************************
                            Instruction Decoder:
                            decode_length = 16-bit opcode
                            scaling = 4 decoders (4 decode width)
                            *************************************/
                            inst_decoder: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "inst_decoder";
                                    x86 = true;
                                    decode_length = 16;
                                    scaling = 4;
                                };
                            }; // package.core_die.core2.inst_decoder

                            /*************************************
                            Operand Decoder:
                            decode_length = 4-bit operand code
                            scaling = (2 input operands + 1 output operand) x (4 decode width)
                            *************************************/
                            operand_decoder: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "inst_decoder";
                                    x86 = true;
                                    decode_length = 4;
                                    scaling = 12;
                                };
                            }; // package.core_die.core2.operand_decoder

                            /*************************************
                            Micro-op Sequencer:
                            decode_length = 16-bit opcode
                            scaling = 1 (decode port 0)
                            *************************************/
                            uop_sequencer: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "inst_decoder";
                                    x86 = true;
                                    decode_length = 16;
                                    scaling = 1;
                                };
                            }; // package.core_die.core2.uop_sequencer

                            /*************************************
                            Pipeline Latch (Instruction Decoder to Micro-op Queue):
                            per_stage_vector = pc (64 bits) + opcode (16 bits) + 3 x operand code (4 bits)
                            + immediate/offset (64 bits)
                            pipeline_stages = 2 (decoder depth)
                            scaling = 4 (4 decode width)
                            *************************************/
                            latch_id2uq: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "pipeline";
                                    pipeline_stages = 2;
                                    per_stage_vector = 156;
                                    scaling = 4;
                                };
                            }; //package.core_die.core2.latch_id2uq

                            /*************************************
                            Micro-op Queue:
                            16-byte line size
                            28 entries
                            4 write ports (4 decode width)
                            6 read ports (6 issue width)
                            *************************************/
                            uop_queue: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "ram";
                                    line_size = 16;
                                    size = 448;
                                    num_rd_ports = 6;
                                    num_wr_ports = 4;
                                    access_mode = "normal";
                                };
                            }; // package.core_die.core2.uop_queue

                            /*************************************
                            Pipeline Latch (Micro-op Queue to Register Renaming Unit):
                            per_stage_vector = pc (64 bits) + opcode (16 bits) + 3 x operand code (4 bits)
                            + immediate/offset (64 bits)
                            scaling = 6 (6 issue width)
                            *************************************/
                            latch_uq2rr: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "pipeline";
                                    pipeline_stages = 1;
                                    per_stage_vector = 156;
                                    scaling = 6;
                                };
                            }; // package.core_die.core2.latch_uq2rat

                            /*************************************
                            Register Alias Table:
                            line size = 32 bytes (1 byte ROB tag x 32 checkpoints)
                            output size = 1 byte ROB tag
                            16 entries
                            8 read ports (2 operands x 4 decode width)
                            4 write ports (4 decode width)
                            *************************************/
                            rat: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "ram";
                                    line_size = 32;
                                    output_size = 8;
                                    size = 1024;
                                    num_rw_ports = 1;
                                    num_rd_ports = 8;
                                    num_wr_ports = 4;
                                    num_search_ports = 4;
                                    access_mode = "sequential";
                                    adjust_area = true;
                                };
                            }; // package.core_die.core2.rat

                            /*************************************
                            Free List:
                            1-bit line size (valid bit)
                            128 entries (ROB entries)
                            4 read/write ports (4 decode/commit width)
                            *************************************/
                            freelist: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "ram";
                                    line_size = 1;
                                    output_width = 1;
                                    size = 128;
                                    num_rw_ports = 1;
                                    num_rd_ports = 4;
                                    num_wr_ports = 4;
                                    adjust_area = true;
                                };
                            }; // package.core_die.core2.freelist

                            /*************************************
                            Dependency Check Logic:
                            4-bit operand code
                            scaling = 2 operands
                            *************************************/
                            dependency_check: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "dep_resource_conflict_check";
                                    compare_bits = 4;
                                    decode_width = 4;
                                    scaling = 2;
                                };
                            }; // package.core_die.core2.dependency_check

                            /*************************************
                            Pipeline Latch (Register Renaming Unit to Scheduler):
                            per_stage_vector = opcode (16 bits) + 3 x operand tags (8 bits) + 2 operands (64 bits)
                            + immediate/offset (64 bits)
                            pipeline_stages = 2 (renaming steps)
                            scaling = 6 (6 issue width)
                            *************************************/
                            latch_rr2rs: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "pipeline";
                                    pipeline_stages = 2;
                                    per_stage_vector = 232;
                                    scaling = 6;
                                };
                            }; // package.core_die.core2.latch_rr2rs

                            /*************************************
                            Reservation Station:
                            line size = {opcode (16 bits) + 2 x src operand tags (8 bits)
                            + 2 x src operands (64 bits)}/8.0
                            assoc = 0 (fully associative)
                            36 entries
                            tag bits = dest operand tag (8 bits)
                            6 read/write ports (6 issue width)
                            *************************************/
                            rs: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 20;
                                    assoc = 0;
                                    size = 720;
                                    tag_width = 8;
                                    num_rd_ports = 6;
                                    num_wr_ports = 6;
                                    num_search_ports = 6;
                                    cycle_time = 1;
                                    access_time = 1;
                                    access_model = "normal";
                                };
                            }; // package.core_die.core2.rs

                            /*************************************
                            Issue Selection Logic:
                            selection input: RS entries
                            selection output: issue width
                            *************************************/
                            issue_select: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "selection_logic";
                                    selection_input = 36;
                                    selection_output = 6;
                                };
                            }; // package.core_die.core2.issue_select

                            /*************************************
                            Pipeline Latch (Scheduler to Execute Unit)
                            per_stage_vector = opcode (16 bits) + 3 x operand tags (8 bits) + 2 x operands (64 bits)
                            + immediate/offset (64 bits)
                            scaling = 6 (6 issue width)
                            *************************************/
                            latch_rs2ex: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "pipeline";
                                    pipeline_stages = 1;
                                    per_stage_vector = 232;
                                    scaling = 6;
                                };
                            }; // package.core_die.core2.latch_rs2ex

                            /*************************************
                            Integer Register:
                            line size = 64 bits
                            16 entries
                            12 read ports (2 operands x 6 issue width)
                            4 write ports (4 commit width)
                            *************************************/
                            reg_int: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "ram";
                                    line_size = 8;
                                    size = 128;
                                    num_rw_ports = 1;
                                    num_rd_ports = 12;
                                    num_wr_ports = 4;
                                    access_mode = "sequential";
                                    area_scaling = 1.1;
                                };
                            }; // package.core_die.core2.reg_int

                            /*************************************
                            Floating-Point Register:
                            line size = 80 bits
                            16 entries
                            4 read port (2 operands x 2 fp-issue width)
                            2 write ports (2 fp-commit width)
                            *************************************/
                            reg_fp: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "ram";
                                    line_size = 10;
                                    size = 160;
                                    num_rw_ports = 1;
                                    num_rd_ports = 4;
                                    num_wr_ports = 2;
                                    acceess_mode = "sequential";
                                    area_scaling = 1.1;
                                };
                            }; // package.core_die.core2.reg_fp

                            /*************************************
                            Reorder Buffer
                            lines size = {pc/ip (64 bits) + dest operand tag (8 bits) + data (64 bits)
                            + tag overhead (5 bits)}/8.0
                            128 entries
                            6 read/write ports (6 issue width)
                            4 r/w ports (4 commit width)
                            *************************************/
                            rob: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "ram";
                                    line_size = 18;
                                    size = 2304;
                                    num_rw_ports = 4;
                                    num_rd_ports = 6;
                                    num_wr_ports = 6;
                                    cycle_time = 1;
                                    access_time = 1;
                                    access_mode = "sequential";
                                };
                            }; // package.core_die.core2.rob

                            /*************************************
                            Pipeline Latch (Reorder Buffer[Physical Register] to RS)
                            per_stage_vector = operand tag (8 bits) + data (64 bits)
                            scaling = 12 (2 operands x 6 issue width)
                            *************************************/
                            latch_rob2rs: {
                                library: {
                                model = "mcpat";
                                energy_model = "pipeline";
                                pipeline_stages = 1;
                                per_stage_vector = 72;
                                scaling = 12;
                                };
                            }; // package.core_die.core2.latch_rob2rs

                            /*************************************
                            Pipeline Latch (Reorder Buffer to Register File)
                            per_stage_vector = operand tag (8 bits) + data (64 bits)
                            scaling = 4 (4 commit width)
                            *************************************/
                            latch_rob2reg: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "pipeline";
                                    pipeline_stages = 1;
                                    per_stage_vector = 72;
                                    scaling = 4;
                                };
                            }; // package.core_die.core2.latch_rob2reg

                            /*************************************
                            Integer ALU:
                            6 ALU(s)
                            *************************************/
                            alu: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "functional_unit";
                                    energy_submodel = "alu";
                                    scaling = 6;
                                };
                            }; // package.core_die.core2.alu

                            /*************************************
                            Integer MUL/DIV:
                            1 integer mul/div unit(s)
                            *************************************/
                            mul: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "functional_unit";
                                    energy_submodel = "mul";
                                    scaling = 1;
                                    };
                            }; // package.core_die.core2.mul

                            /*************************************
                            Integer Data/Tag Bypass Wire:
                            connects to ALU, RS, ROB
                            data width = data (64 bits) + dest operand tag (8 bits)
                            *************************************/
                            int_bypass: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "interconnect";
                                    data_width = 72;
                                    connect = ["package.core_die.core2.alu",
                                               "package.core_die.core2.rs",
                                               "package.core_die.core2.rob"];
                                    scaling = 6;
                                };
                            }; // package.core_die.core2.int_bypass

                            /*************************************
                            Pipeline Latch (Execution Unit to ROB):
                            per_stage_vector = opcode (16 bits) + dest operand tag (8 bits) + data (64 bits)
                            pipeline_stages = 1 (integer delay)
                            scaling = 6 (6 issue width)
                            *************************************/
                            latch_ex_int2rob: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "pipeline";
                                    pipeline_stages = 1;
                                    per_stage_vector = 88;
                                    scaling = 6;
                                };
                            }; // package.core_die.core2.latch_ex_int2rob

                            /*************************************
                            Floating-Point Unit:
                            2 FPU(s)
                            *************************************/
                            fpu: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "functional_unit";
                                    energy_submodel = "fpu";
                                    scaling = 2;
                                };
                            }; // package.core_die.core2.fpu

                            /*************************************
                            Floating-Point Data/Tag Bypass Wire:
                            connects to FPU, RS, ROB
                            data width = data (80 bits) + dest operand tag (8 bits)
                            *************************************/
                            fp_bypass: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "interconnect";
                                    data_width = 88;
                                    connect = ["package.core_die.core2.fpu",
                                               "package.core_die.core2.rs",
                                               "package.core_die.core2.rob"];
                                    scaling = 2;
                                };
                            }; // package.core_die.core2.fp_bypass

                            /*************************************
                            Pipeline Latch (Execution Unit to ROB):
                            per_stage_vector = opcode (16 bits) + dest operand tag (8 bits) + data (80 bits)
                            pipeline_stages = 3 (floating-point delay)
                            scaling = 2 (2 fp-issue width)
                            *************************************/
                            latch_ex_fp2rob: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "pipeline";
                                    pipeline_stages = 3;
                                    per_stage_vector = 104;
                                    scaling = 2;
                                };
                            }; // package.core_die.core2.latch_ex_fp2rob

                            /*************************************
                            Store Queue:
                            line size = {vaddr (64 bits) + data (64 bits) + operand tag (8 bits)}/8.0
                            assco = 0 (fully associative)
                            32 entries
                            tag bits = vaddr (64 bits) + overhead (5 bits)
                            *************************************/
                            stq: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 17;
                                    assoc = 0;
                                    size = 544;
                                    tag_width = 69;
                                    num_rd_ports = 1;
                                    num_wr_ports = 1;
                                    num_search_ports = 1;
                                    access_mode = "sequential";
                                    area_scaling = 1.1;
                                };
                            }; // package.core_die.core2.stq

                            /*************************************
                            Pipeline Latch (Store Queue to Cache):
                            per_stage_vector = vaddr (64 bits) + data (64 bits)
                            *************************************/
                            latch_stq2dcache: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "pipeline";
                                    pipeline_stages = 1;
                                    per_stage_vector = 128;
                                    scaling = 1;
                                };
                            }; // package.core_die.core2.latch_stq2dcache

                            /*************************************
                            Pipeline Latch (Store Queue to Load Queue):
                            per_stage_vector = vaddr (64 bits) + data (64 bits)
                            *************************************/
                            latch_stq2ldq: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "pipeline";
                                    pipeline_stages = 1;
                                    per_stage_vector = 128;
                                    scaling = 1;
                                };
                            }; // package.core_die.core2.latch_stq2ldq

                            /*************************************
                            Load Queue:
                            line size = {vaddr (64 bits) + data (64 bits) + operand tag (8 bits)}/8.0
                            assco = 0 (fully associative)
                            48 entries
                            tag bits = vaddr (64 bits) + overhead (5 bits)
                            *************************************/
                            ldq: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 17;
                                    assoc = 0;
                                    size = 816;
                                    tag_width = 69;
                                    num_rd_ports = 1;
                                    num_wr_ports = 1;
                                    num_search_ports = 1;
                                    access_mode = "sequential";
                                    area_scaling = 1.1;
                                };
                            }; // package.core_die.core2.ldq

                            /*************************************
                            Pipeline Latch (Load Queue to Cache):
                            per_stage_vector = vaddr (64 bits) + data (64 bits)
                            *************************************/
                            latch_ldq2dcache: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "pipeline";
                                    pipeline_stages = 1;
                                    per_stage_vector = 128;
                                    scaling = 1;
                                };
                            }; // package.core_die.core2.latch_ldq2dcache

                            /*************************************
                            Pipeline Latch (Load Queue to RS/ROB):
                            per_stage_vector = operand tag (8 bits) + data (64 bits)
                            *************************************/
                            latch_ldq2rs: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "pipeline";
                                    pipeline_stages = 1;
                                    per_stage_vector = 72;
                                    scaling = 1;
                                };
                            }; // package.core_die.core2.latch_ldq2rs

                            /*************************************
                            Data Cache:
                            64-byte line size
                            4-way assoc
                            32KB size
                            128 sets
                            tag bits = physical address (52 bits) - log2(size/line_size/assoc) (7 bits)
                            - log2(line_size) (6 bits) + overhead (5 bits)
                            *************************************/
                            data_cache: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 64;
                                    assoc = 4;
                                    size = 32768;
                                    tag_width = 44;
                                    num_rw_ports = 1;
                                    cycle_time = 1;
                                    access_time = 1;
                                    access_mode = "normal";
                                };
                            }; // package.core_die.core2.data_cache

                            /*************************************
                            Data Cache Miss Buffer:
                            assoc = 0 (fully associative)
                            8 entries
                            line_size = {physical address (52 bits)
                            + data_cache tag (log2(size/line_size) = 9 bits)
                            + data_cache line_size (512 bits)}/8
                            tag bits = physical address (52 bits) + overhead (5 bits)
                            *************************************/
                            data_cache_miss_buffer: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 72;
                                    assoc = 0;
                                    size = 576;
                                    tag_width = 57;
                                    num_rw_ports = 1;
                                    num_search_ports = 1;
                                    cycle_time = 1;
                                    access_time = 1;
                                    access_mode = "normal";
                                };
                            }; // package.core_die.core2.data_cache_miss_buffer

                            /*************************************
                            Data Cache Prefetch Buffer:
                            assoc = 0 (fully associative)
                            8 entries
                            line_size = data_cache line_size
                            tag bits = physical address (52 bits) + overhead (5 bits)
                            *************************************/
                            data_cache_prefetch_buffer: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 64;
                                    assoc = 0;
                                    size = 512;
                                    tag_width = 57;
                                    num_rw_ports = 1;
                                    num_search_ports = 1;
                                    cycle_time = 1;
                                    access_time = 1;
                                    access_mode = "normal";
                                };
                            }; // package.core_die.core2.data_cache_prefetch_buffer

                            /*************************************
                            Data Cache Writeback Buffer:
                            assoc = 0 (fully associative)
                            8 entries
                            line_size = data_cache line_size
                            tag bits = physical address (52 bits) + overhead (5 bits)
                            *************************************/
                            data_cache_writeback_buffer: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 64;
                                    assoc = 0;
                                    size = 512;
                                    tag_width = 57;
                                    num_rw_ports = 1;
                                    num_search_ports = 1;
                                    cycle_time = 1;
                                    access_time = 1;
                                    access_mode = "normal";
                                };
                            }; // package.core_die.core2.data_cache_prefetch_buffer

                            /*************************************
                            Data TLB:
                            4-way assoc
                            128 entries
                            line_size = physical address / 8
                            tag bits = virtual address (64 bits) + overhead (5 bits)
                            *************************************/
                            data_tlb: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 8;
                                    assoc = 4;
                                    size = 4096;
                                    tag_width = 69;
                                    num_rw_ports = 1;
                                    cycle_time = 1;
                                    access_time = 1;
                                    access_mode = "normal";
                                };
                            }; // package.core_die.core2.data_tlb

                            /*************************************
                            L2 TLB:
                            8-way assoc
                            256 entries
                            line_size = physical address / 8
                            tag bits = virtual address (64 bits) + overhead (5 bits)
                            *************************************/
                            l2_tlb: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 8;
                                    assoc = 8;
                                    size = 16384;
                                    tag_width = 69;
                                    num_rw_ports = 1;
                                    cycle_time = 1;
                                    access_time = 1;
                                    access_mode = "normal";
                                };
                            }; // package.core_die.core2.l2_tlb

                            /*************************************
                            Undifferentiated Core (Non-Functional Portion):
                            *************************************/
                            undiff: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "undiff_core";
                                    pipeline_stages = 32;
                                    issue_width = 6;
                                    scaling = 0.41;
                                };
                            }; // package.core_die.core2.undiff
                        }; // package.core_die.core2.component
                    }; // package.core_die.core2

                    core3: {
                    //pthread_init = true;
                    /*************************************
                    These library settings are commonly
                    applied to core3 components.
                    *************************************/
                        library: {
                          # model = "failure";
                            model = "none";
                            feature_size = 16e-9;
                            voltage = 0.8;
                            clock_frequency = 1.0e9;
                            component_type = "core";
                            core_type = "ooo";
                            wire_type = "global";
                            wiring_type = "global";
                            device_type = "hp";
                            interconnect_projection = "aggressive";
                            opt_for_clk = false;
                            embedded = false;
                            longer_channel_device = false;
                            energy_scaling = 3.0;

                            # failure_model: {
                            #     hci: {
                            #         n = 3.0;
                            #         Ea = -0.1;
                            #     };
                            #     em: {
                            #         n = 2.0;
                            #         Ea = 0.9;
                            #     };
                            #     nbti: {
                            #         n = 5.0;
                            #         Ea = 0.4;
                            #     };
                            #     sm: {
                            #         T0 = 500.0;
                            #         n = 2.5;
                            #         Ea = 0.9;
                            #     };
                            #     tddb: {
                            #         a = 78.0;
                            #         b = -0.081;
                            #         c = 0.1;
                            #         x = -0.759;
                            #         y = 66.8;
                            #         z = 8.37e-4;
                            #         Ea = 0.7;
                            #     };
                            # };

                            # target_temperature = 338; // 65'C
                            # target_voltage = 0.8; // 0.8V
                            # target_frequency = 2.0e9; // 2GHz
                            # target_MTTF = 5.048524800e9; // 5 years (in seconds) x 32 cores

                            dimension: {
                                left = 3.5e-3;
                                bottom = 2.5e-3;
                                width = 2.5e-3;
                                height = 2.5e-3;
                                die_index = 0;
                                die_name = "core_die";
                            };
                        }; // package.core_die.core3.library

                        /*************************************
                        package.core_die.core3 components
                        *************************************/
                        component: {
                            /*************************************
                            L1 Branch Target Buffer:
                            8-byte line size (64-bit address)
                            4-way assoc
                            1KB size
                            32 sets
                            tag bits = virtual addreess(64 bits) + overhead (5 bits)
                            *************************************/
                            l1_btb: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 8;
                                    assoc = 4;
                                    size = 1024;
                                    tag_width = 69;
                                    num_rw_ports = 1;
                                    num_rd_ports = 1;
                                    num_wr_ports = 1;
                                    cycle_time = 1;
                                    access_time = 1;
                                    access_mode = "normal";
                                    };
                            }; // package.core_die.core3.l1_btb

                            /*************************************
                            L2 Branch Target Buffer:
                            8-byte line size (64-bit address)
                            4-way assoc
                            4KB size
                            128 sets
                            tag bits = 64-bit address + 5-bit overhead
                            *************************************/
                            l2_btb: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 8;
                                    assoc = 4;
                                    size = 4096;
                                    tag_width = 69;
                                    num_rw_ports = 1;
                                    num_rd_ports = 1;
                                    num_wr_ports = 1;
                                    cycle_time = 1;
                                    access_time = 1;
                                    access_mode = "normal";
                                };
                            }; // package.core_die.core3.l2_btb

                            /*************************************
                            Predictor Chooser:
                            2-bit line size (ceil'd to 1 byte)
                            4096 entries
                            *************************************/
                            predictor_chooser: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 1;
                                    output_width = 2;
                                    size = 4096;
                                    tag_width = 6;
                                    num_rd_ports = 1;
                                    num_wr_ports = 1;
                                    access_mode = "fast";
                                    adjust_area = true;
                                };
                            }; // package.core_die.core3.predictor_chooser

                            /*************************************
                            Global Predictor:
                            2-bit line size (ceil'd to 1 byte)
                            4096 entries
                            *************************************/
                            global_predictor: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 1;
                                    output_width = 2;
                                    size = 4096;
                                    tag_width = 6;
                                    num_rd_ports = 1;
                                    num_wr_ports = 1;
                                    access_mode = "fast";
                                    adjust_area = true;
                                };
                            }; // package.core_die.core3.global_predictor

                            /*************************************
                            L1 Local Predictor:
                            10-bit line size (ceil'd to 2 byte)
                            1024 entries
                            *************************************/
                            l1_local_predictor: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 2;
                                    output_width = 10;
                                    size = 2048;
                                    tag_width = 6;
                                    num_rd_ports = 1;
                                    num_wr_ports = 1;
                                    access_mode = "fast";
                                    adjust_area = true;
                                };
                            }; // package.core_die.core3.l1_local_predictor

                            /*************************************
                            L2 Local Predictor:
                            2-bit line size (ceil'd to 1 byte)
                            1024 entries
                            *************************************/
                            l2_local_predictor: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 1;
                                    output_width = 2;
                                    size = 1024;
                                    tag_width = 6;
                                    num_rd_ports = 1;
                                    num_wr_ports = 1;
                                    access_mode = "fast";
                                    adjust_area = true;
                                };
                            }; // package.core_die.core3.l2_local_predictor

                            /*************************************
                            Return Address Stack:
                            8-byte line size (64-bit address)
                            16 entries
                            *************************************/
                            ras: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 8;
                                    size = 128;
                                    tag_width = 6;
                                    num_rd_ports = 1;
                                    num_wr_ports = 1;
                                    access_mode = "fast";
                                };
                            }; // package.core_die.core3.ras

                            /*************************************
                            Instruction Cache:
                            64-byte line size
                            4-way assoc
                            32KB size
                            128 sets
                            tag bits = physical address (52 bits) - log2(size/line_size/assoc) (7 bits)
                            - log2(line_size) (6 bits) + overhead (5 bits)
                            *************************************/
                            inst_cache: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 64;
                                    assoc = 4;
                                    size = 32768;
                                    tag_width = 44;
                                    num_rw_ports = 1;
                                    cycle_time = 1;
                                    access_time = 1;
                                    access_mode = "normal";
                                };
                            }; // package.core_die.core3.inst_cache

                            /*************************************
                            Instruction Cache Miss Buffer:
                            assoc = 0 (fully associative)
                            8 entries
                            line_size = {physical address (52 bits)
                            + inst_cache tag (log2(size/line_size) = 9 bits)
                            + inst_cache line_size (512 bits)}/8
                            tag bits = physical address (52 bits) + overhead (5 bits)
                            *************************************/
                            inst_cache_miss_buffer: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 72;
                                    assoc = 0;
                                    size = 576;
                                    tag_width = 57;
                                    num_rw_ports = 1;
                                    num_search_ports = 1;
                                    cycle_time = 1;
                                    access_time = 1;
                                    access_mode = "normal";
                                };
                            }; // package.core_die.core3.inst_cache_miss_buffer

                            /*************************************
                            Instruction Cache Prefetch Buffer:
                            assoc = 0 (fully associative)
                            8 entries
                            line_size = inst_cache line_size
                            tag bits = physical address (52 bits) + overhead (5 bits)
                            *************************************/
                            # inst_cache_prefetch_buffer: {
                            #     library: {
                            #         model = "mcpat";
                            #         energy_model = "array";
                            #         energy_submodel = "cache";
                            #         line_size = 64;
                            #         assoc = 0;
                            #         size = 512;
                            #         tag_width = 57;
                            #         num_rw_ports = 1;
                            #         num_search_ports = 1;
                            #         cycle_time = 1;
                            #         access_time = 1;
                            #         access_mode = "normal";
                            #     };
                            # }; // package.core_die.core3.inst_cache_prefetch_buffer

                            /*************************************
                            Instruction TLB:
                            4-way assoc
                            128 entries
                            line size = physical address / 8
                            tag bits = virtual address (64 bits) + overhead (5 bits)
                            *************************************/
                            inst_tlb: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 8;
                                    assoc = 4;
                                    size = 4096;
                                    tag_width = 69;
                                    num_rw_ports = 1;
                                    cycle_time = 1;
                                    access_time = 1;
                                    access_mode = "normal";
                                };
                            }; // package.core_die.core3.inst_tlb

                            /*************************************
                            Pipeline Latch (Instruction Cache to Instruction Buffer):
                            per_stage_vector = 16-byte fetch unit + pc (64 bits)
                            scaling = 4 (4 fetch width)
                            *************************************/
                            latch_ic2ib: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "pipeline";
                                    pipeline_stages = 1;
                                    per_stage_vector = 192;
                                    scaling = 4;
                                };
                            }; // package.core_die.core3.latch_ic2ib

                            /*************************************
                            Program Counter:
                            per_stage_vector = current pc (64 bits) + next pc (64 bits)
                            *************************************/
                            pc: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "pipeline";
                                    pipeline_stages = 1;
                                    per_stage_vector = 128;
                                };
                            }; // package.core_die.core3.pc

                            /*************************************
                            Instruction Buffer:
                            8-byte line size
                            16 entries
                            4 r/w ports (4 fetch width)
                            *************************************/
                            inst_buffer: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "ram";
                                    line_size = 8;
                                    size = 128;
                                    num_rd_ports = 4;
                                    num_wr_ports = 4;
                                    access_model = "normal";
                                };
                            }; // package.core_die.core3.inst_buffer

                            /*************************************
                            Pipeline Latch (Instruction Buffer to Instruction Decoder)
                            per_stage_vector = pc (64 bits) + instruction length (64 bits)
                            scaling = 4 (4 decode width)
                            *************************************/
                            latch_ib2id: {
                                library: {
                                model = "mcpat";
                                energy_model = "pipeline";
                                pipeline_stages = 1;
                                per_stage_vector = 128;
                                scaling = 4;
                                };
                            }; // package.core_die.core3.latch_ib2id

                            /*************************************
                            Instruction Decoder:
                            decode_length = 16-bit opcode
                            scaling = 4 decoders (4 decode width)
                            *************************************/
                            inst_decoder: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "inst_decoder";
                                    x86 = true;
                                    decode_length = 16;
                                    scaling = 4;
                                };
                            }; // package.core_die.core3.inst_decoder

                            /*************************************
                            Operand Decoder:
                            decode_length = 4-bit operand code
                            scaling = (2 input operands + 1 output operand) x (4 decode width)
                            *************************************/
                            operand_decoder: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "inst_decoder";
                                    x86 = true;
                                    decode_length = 4;
                                    scaling = 12;
                                };
                            }; // package.core_die.core3.operand_decoder

                            /*************************************
                            Micro-op Sequencer:
                            decode_length = 16-bit opcode
                            scaling = 1 (decode port 0)
                            *************************************/
                            uop_sequencer: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "inst_decoder";
                                    x86 = true;
                                    decode_length = 16;
                                    scaling = 1;
                                };
                            }; // package.core_die.core3.uop_sequencer

                            /*************************************
                            Pipeline Latch (Instruction Decoder to Micro-op Queue):
                            per_stage_vector = pc (64 bits) + opcode (16 bits) + 3 x operand code (4 bits)
                            + immediate/offset (64 bits)
                            pipeline_stages = 2 (decoder depth)
                            scaling = 4 (4 decode width)
                            *************************************/
                            latch_id2uq: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "pipeline";
                                    pipeline_stages = 2;
                                    per_stage_vector = 156;
                                    scaling = 4;
                                };
                            }; //package.core_die.core3.latch_id2uq

                            /*************************************
                            Micro-op Queue:
                            16-byte line size
                            28 entries
                            4 write ports (4 decode width)
                            6 read ports (6 issue width)
                            *************************************/
                            uop_queue: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "ram";
                                    line_size = 16;
                                    size = 448;
                                    num_rd_ports = 6;
                                    num_wr_ports = 4;
                                    access_mode = "normal";
                                };
                            }; // package.core_die.core3.uop_queue

                            /*************************************
                            Pipeline Latch (Micro-op Queue to Register Renaming Unit):
                            per_stage_vector = pc (64 bits) + opcode (16 bits) + 3 x operand code (4 bits)
                            + immediate/offset (64 bits)
                            scaling = 6 (6 issue width)
                            *************************************/
                            latch_uq2rr: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "pipeline";
                                    pipeline_stages = 1;
                                    per_stage_vector = 156;
                                    scaling = 6;
                                };
                            }; // package.core_die.core3.latch_uq2rat

                            /*************************************
                            Register Alias Table:
                            line size = 32 bytes (1 byte ROB tag x 32 checkpoints)
                            output size = 1 byte ROB tag
                            16 entries
                            8 read ports (2 operands x 4 decode width)
                            4 write ports (4 decode width)
                            *************************************/
                            rat: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "ram";
                                    line_size = 32;
                                    output_size = 8;
                                    size = 1024;
                                    num_rw_ports = 1;
                                    num_rd_ports = 8;
                                    num_wr_ports = 4;
                                    num_search_ports = 4;
                                    access_mode = "sequential";
                                    adjust_area = true;
                                };
                            }; // package.core_die.core3.rat

                            /*************************************
                            Free List:
                            1-bit line size (valid bit)
                            128 entries (ROB entries)
                            4 read/write ports (4 decode/commit width)
                            *************************************/
                            freelist: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "ram";
                                    line_size = 1;
                                    output_width = 1;
                                    size = 128;
                                    num_rw_ports = 1;
                                    num_rd_ports = 4;
                                    num_wr_ports = 4;
                                    adjust_area = true;
                                };
                            }; // package.core_die.core3.freelist

                            /*************************************
                            Dependency Check Logic:
                            4-bit operand code
                            scaling = 2 operands
                            *************************************/
                            dependency_check: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "dep_resource_conflict_check";
                                    compare_bits = 4;
                                    decode_width = 4;
                                    scaling = 2;
                                };
                            }; // package.core_die.core3.dependency_check

                            /*************************************
                            Pipeline Latch (Register Renaming Unit to Scheduler):
                            per_stage_vector = opcode (16 bits) + 3 x operand tags (8 bits) + 2 operands (64 bits)
                            + immediate/offset (64 bits)
                            pipeline_stages = 2 (renaming steps)
                            scaling = 6 (6 issue width)
                            *************************************/
                            latch_rr2rs: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "pipeline";
                                    pipeline_stages = 2;
                                    per_stage_vector = 232;
                                    scaling = 6;
                                };
                            }; // package.core_die.core3.latch_rr2rs

                            /*************************************
                            Reservation Station:
                            line size = {opcode (16 bits) + 2 x src operand tags (8 bits)
                            + 2 x src operands (64 bits)}/8.0
                            assoc = 0 (fully associative)
                            36 entries
                            tag bits = dest operand tag (8 bits)
                            6 read/write ports (6 issue width)
                            *************************************/
                            rs: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 20;
                                    assoc = 0;
                                    size = 720;
                                    tag_width = 8;
                                    num_rd_ports = 6;
                                    num_wr_ports = 6;
                                    num_search_ports = 6;
                                    cycle_time = 1;
                                    access_time = 1;
                                    access_model = "normal";
                                };
                            }; // package.core_die.core3.rs

                            /*************************************
                            Issue Selection Logic:
                            selection input: RS entries
                            selection output: issue width
                            *************************************/
                            issue_select: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "selection_logic";
                                    selection_input = 36;
                                    selection_output = 6;
                                };
                            }; // package.core_die.core3.issue_select

                            /*************************************
                            Pipeline Latch (Scheduler to Execute Unit)
                            per_stage_vector = opcode (16 bits) + 3 x operand tags (8 bits) + 2 x operands (64 bits)
                            + immediate/offset (64 bits)
                            scaling = 6 (6 issue width)
                            *************************************/
                            latch_rs2ex: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "pipeline";
                                    pipeline_stages = 1;
                                    per_stage_vector = 232;
                                    scaling = 6;
                                };
                            }; // package.core_die.core3.latch_rs2ex

                            /*************************************
                            Integer Register:
                            line size = 64 bits
                            16 entries
                            12 read ports (2 operands x 6 issue width)
                            4 write ports (4 commit width)
                            *************************************/
                            reg_int: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "ram";
                                    line_size = 8;
                                    size = 128;
                                    num_rw_ports = 1;
                                    num_rd_ports = 12;
                                    num_wr_ports = 4;
                                    access_mode = "sequential";
                                    area_scaling = 1.1;
                                };
                            }; // package.core_die.core3.reg_int

                            /*************************************
                            Floating-Point Register:
                            line size = 80 bits
                            16 entries
                            4 read port (2 operands x 2 fp-issue width)
                            2 write ports (2 fp-commit width)
                            *************************************/
                            reg_fp: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "ram";
                                    line_size = 10;
                                    size = 160;
                                    num_rw_ports = 1;
                                    num_rd_ports = 4;
                                    num_wr_ports = 2;
                                    acceess_mode = "sequential";
                                    area_scaling = 1.1;
                                };
                            }; // package.core_die.core3.reg_fp

                            /*************************************
                            Reorder Buffer
                            lines size = {pc/ip (64 bits) + dest operand tag (8 bits) + data (64 bits)
                            + tag overhead (5 bits)}/8.0
                            128 entries
                            6 read/write ports (6 issue width)
                            4 r/w ports (4 commit width)
                            *************************************/
                            rob: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "ram";
                                    line_size = 18;
                                    size = 2304;
                                    num_rw_ports = 4;
                                    num_rd_ports = 6;
                                    num_wr_ports = 6;
                                    cycle_time = 1;
                                    access_time = 1;
                                    access_mode = "sequential";
                                };
                            }; // package.core_die.core3.rob

                            /*************************************
                            Pipeline Latch (Reorder Buffer[Physical Register] to RS)
                            per_stage_vector = operand tag (8 bits) + data (64 bits)
                            scaling = 12 (2 operands x 6 issue width)
                            *************************************/
                            latch_rob2rs: {
                                library: {
                                model = "mcpat";
                                energy_model = "pipeline";
                                pipeline_stages = 1;
                                per_stage_vector = 72;
                                scaling = 12;
                                };
                            }; // package.core_die.core3.latch_rob2rs

                            /*************************************
                            Pipeline Latch (Reorder Buffer to Register File)
                            per_stage_vector = operand tag (8 bits) + data (64 bits)
                            scaling = 4 (4 commit width)
                            *************************************/
                            latch_rob2reg: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "pipeline";
                                    pipeline_stages = 1;
                                    per_stage_vector = 72;
                                    scaling = 4;
                                };
                            }; // package.core_die.core3.latch_rob2reg

                            /*************************************
                            Integer ALU:
                            6 ALU(s)
                            *************************************/
                            alu: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "functional_unit";
                                    energy_submodel = "alu";
                                    scaling = 6;
                                };
                            }; // package.core_die.core3.alu

                            /*************************************
                            Integer MUL/DIV:
                            1 integer mul/div unit(s)
                            *************************************/
                            mul: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "functional_unit";
                                    energy_submodel = "mul";
                                    scaling = 1;
                                    };
                            }; // package.core_die.core3.mul

                            /*************************************
                            Integer Data/Tag Bypass Wire:
                            connects to ALU, RS, ROB
                            data width = data (64 bits) + dest operand tag (8 bits)
                            *************************************/
                            int_bypass: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "interconnect";
                                    data_width = 72;
                                    connect = ["package.core_die.core3.alu",
                                               "package.core_die.core3.rs",
                                               "package.core_die.core3.rob"];
                                    scaling = 6;
                                };
                            }; // package.core_die.core3.int_bypass

                            /*************************************
                            Pipeline Latch (Execution Unit to ROB):
                            per_stage_vector = opcode (16 bits) + dest operand tag (8 bits) + data (64 bits)
                            pipeline_stages = 1 (integer delay)
                            scaling = 6 (6 issue width)
                            *************************************/
                            latch_ex_int2rob: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "pipeline";
                                    pipeline_stages = 1;
                                    per_stage_vector = 88;
                                    scaling = 6;
                                };
                            }; // package.core_die.core3.latch_ex_int2rob

                            /*************************************
                            Floating-Point Unit:
                            2 FPU(s)
                            *************************************/
                            fpu: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "functional_unit";
                                    energy_submodel = "fpu";
                                    scaling = 2;
                                };
                            }; // package.core_die.core3.fpu

                            /*************************************
                            Floating-Point Data/Tag Bypass Wire:
                            connects to FPU, RS, ROB
                            data width = data (80 bits) + dest operand tag (8 bits)
                            *************************************/
                            fp_bypass: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "interconnect";
                                    data_width = 88;
                                    connect = ["package.core_die.core3.fpu",
                                               "package.core_die.core3.rs",
                                               "package.core_die.core3.rob"];
                                    scaling = 2;
                                };
                            }; // package.core_die.core3.fp_bypass

                            /*************************************
                            Pipeline Latch (Execution Unit to ROB):
                            per_stage_vector = opcode (16 bits) + dest operand tag (8 bits) + data (80 bits)
                            pipeline_stages = 3 (floating-point delay)
                            scaling = 2 (2 fp-issue width)
                            *************************************/
                            latch_ex_fp2rob: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "pipeline";
                                    pipeline_stages = 3;
                                    per_stage_vector = 104;
                                    scaling = 2;
                                };
                            }; // package.core_die.core3.latch_ex_fp2rob

                            /*************************************
                            Store Queue:
                            line size = {vaddr (64 bits) + data (64 bits) + operand tag (8 bits)}/8.0
                            assco = 0 (fully associative)
                            32 entries
                            tag bits = vaddr (64 bits) + overhead (5 bits)
                            *************************************/
                            stq: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 17;
                                    assoc = 0;
                                    size = 544;
                                    tag_width = 69;
                                    num_rd_ports = 1;
                                    num_wr_ports = 1;
                                    num_search_ports = 1;
                                    access_mode = "sequential";
                                    area_scaling = 1.1;
                                };
                            }; // package.core_die.core3.stq

                            /*************************************
                            Pipeline Latch (Store Queue to Cache):
                            per_stage_vector = vaddr (64 bits) + data (64 bits)
                            *************************************/
                            latch_stq2dcache: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "pipeline";
                                    pipeline_stages = 1;
                                    per_stage_vector = 128;
                                    scaling = 1;
                                };
                            }; // package.core_die.core3.latch_stq2dcache

                            /*************************************
                            Pipeline Latch (Store Queue to Load Queue):
                            per_stage_vector = vaddr (64 bits) + data (64 bits)
                            *************************************/
                            latch_stq2ldq: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "pipeline";
                                    pipeline_stages = 1;
                                    per_stage_vector = 128;
                                    scaling = 1;
                                };
                            }; // package.core_die.core3.latch_stq2ldq

                            /*************************************
                            Load Queue:
                            line size = {vaddr (64 bits) + data (64 bits) + operand tag (8 bits)}/8.0
                            assco = 0 (fully associative)
                            48 entries
                            tag bits = vaddr (64 bits) + overhead (5 bits)
                            *************************************/
                            ldq: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 17;
                                    assoc = 0;
                                    size = 816;
                                    tag_width = 69;
                                    num_rd_ports = 1;
                                    num_wr_ports = 1;
                                    num_search_ports = 1;
                                    access_mode = "sequential";
                                    area_scaling = 1.1;
                                };
                            }; // package.core_die.core3.ldq

                            /*************************************
                            Pipeline Latch (Load Queue to Cache):
                            per_stage_vector = vaddr (64 bits) + data (64 bits)
                            *************************************/
                            latch_ldq2dcache: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "pipeline";
                                    pipeline_stages = 1;
                                    per_stage_vector = 128;
                                    scaling = 1;
                                };
                            }; // package.core_die.core3.latch_ldq2dcache

                            /*************************************
                            Pipeline Latch (Load Queue to RS/ROB):
                            per_stage_vector = operand tag (8 bits) + data (64 bits)
                            *************************************/
                            latch_ldq2rs: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "pipeline";
                                    pipeline_stages = 1;
                                    per_stage_vector = 72;
                                    scaling = 1;
                                };
                            }; // package.core_die.core3.latch_ldq2rs

                            /*************************************
                            Data Cache:
                            64-byte line size
                            4-way assoc
                            32KB size
                            128 sets
                            tag bits = physical address (52 bits) - log2(size/line_size/assoc) (7 bits)
                            - log2(line_size) (6 bits) + overhead (5 bits)
                            *************************************/
                            data_cache: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 64;
                                    assoc = 4;
                                    size = 32768;
                                    tag_width = 44;
                                    num_rw_ports = 1;
                                    cycle_time = 1;
                                    access_time = 1;
                                    access_mode = "normal";
                                };
                            }; // package.core_die.core3.data_cache

                            /*************************************
                            Data Cache Miss Buffer:
                            assoc = 0 (fully associative)
                            8 entries
                            line_size = {physical address (52 bits)
                            + data_cache tag (log2(size/line_size) = 9 bits)
                            + data_cache line_size (512 bits)}/8
                            tag bits = physical address (52 bits) + overhead (5 bits)
                            *************************************/
                            data_cache_miss_buffer: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 72;
                                    assoc = 0;
                                    size = 576;
                                    tag_width = 57;
                                    num_rw_ports = 1;
                                    num_search_ports = 1;
                                    cycle_time = 1;
                                    access_time = 1;
                                    access_mode = "normal";
                                };
                            }; // package.core_die.core3.data_cache_miss_buffer

                            /*************************************
                            Data Cache Prefetch Buffer:
                            assoc = 0 (fully associative)
                            8 entries
                            line_size = data_cache line_size
                            tag bits = physical address (52 bits) + overhead (5 bits)
                            *************************************/
                            data_cache_prefetch_buffer: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 64;
                                    assoc = 0;
                                    size = 512;
                                    tag_width = 57;
                                    num_rw_ports = 1;
                                    num_search_ports = 1;
                                    cycle_time = 1;
                                    access_time = 1;
                                    access_mode = "normal";
                                };
                            }; // package.core_die.core3.data_cache_prefetch_buffer

                            /*************************************
                            Data Cache Writeback Buffer:
                            assoc = 0 (fully associative)
                            8 entries
                            line_size = data_cache line_size
                            tag bits = physical address (52 bits) + overhead (5 bits)
                            *************************************/
                            data_cache_writeback_buffer: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 64;
                                    assoc = 0;
                                    size = 512;
                                    tag_width = 57;
                                    num_rw_ports = 1;
                                    num_search_ports = 1;
                                    cycle_time = 1;
                                    access_time = 1;
                                    access_mode = "normal";
                                };
                            }; // package.core_die.core3.data_cache_prefetch_buffer

                            /*************************************
                            Data TLB:
                            4-way assoc
                            128 entries
                            line_size = physical address / 8
                            tag bits = virtual address (64 bits) + overhead (5 bits)
                            *************************************/
                            data_tlb: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 8;
                                    assoc = 4;
                                    size = 4096;
                                    tag_width = 69;
                                    num_rw_ports = 1;
                                    cycle_time = 1;
                                    access_time = 1;
                                    access_mode = "normal";
                                };
                            }; // package.core_die.core3.data_tlb

                            /*************************************
                            L2 TLB:
                            8-way assoc
                            256 entries
                            line_size = physical address / 8
                            tag bits = virtual address (64 bits) + overhead (5 bits)
                            *************************************/
                            l2_tlb: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 8;
                                    assoc = 8;
                                    size = 16384;
                                    tag_width = 69;
                                    num_rw_ports = 1;
                                    cycle_time = 1;
                                    access_time = 1;
                                    access_mode = "normal";
                                };
                            }; // package.core_die.core3.l2_tlb

                            /*************************************
                            Undifferentiated Core (Non-Functional Portion):
                            *************************************/
                            undiff: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "undiff_core";
                                    pipeline_stages = 32;
                                    issue_width = 6;
                                    scaling = 0.41;
                                };
                            }; // package.core_die.core3.undiff
                        }; // package.core_die.core3.component
                    }; // package.core_die.core3

                    l1cache0: {
                    //pthread_init = true;
                    /*************************************
                    These library settings are commonly
                    applied to l1cache0 components.
                    *************************************/
                        library: {
                            model = "none";
                            feature_size = 16e-9;
                            voltage = 0.8;
                            clock_frequency = 1.0e9;
                            component_type = "core";
                            core_type = "ooo";
                            wire_type = "global";
                            wiring_type = "global";
                            device_type = "hp";
                            interconnect_projection = "aggressive";
                            opt_for_clk = true;
                            embedded = false;
                            longer_channel_device = false;
                            energy_scaling = 3.0;

                            dimension: {
                                left = 2.5e-3;
                                bottom = 0.0e-3;
                                width = 0.5e-3;
                                height = 2.5e-3;
                                die_index = 0;
                                die_name = "core_die";
                            };
                        }; // package.core_die.l1cache0.library

                        /*************************************
                        package.core_die.l1cache0 components
                        *************************************/
                        component: {
                            /*************************************
                            L1 Cache Array:
                            8-byte line size (64-bit address)
                            8-way assoc
                            32KB size
                            1024 sets
                            tag bits = virtual addreess(64 bits) - set(10 bits) - offset(3 bits)
                            *************************************/
                            cache: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 8;
                                    assoc = 8;
                                    size = 32768;
                                    tag_width = 51;
                                    num_rw_ports = 2;
                                    cycle_time = 3;
                                    access_time = 3;
                                    access_mode = "normal";
                                };
                            }; // package.core_die.l1cache0.cache

                            /*************************************
                            L1 Cache TLB:
                            5-byte line size (64-bit address)
                            640 entires
                            4K page size
                            tag bits = virtual addreess(64 bits) - offset (12 bits) + overhead (6 bits)
                            *************************************/
                            tlb: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 5;
                                    assoc = 0;
                                    size = 640;
                                    tag_width = 58;
                                    num_rd_ports = 2;
                                    num_wr_ports = 2;
                                    num_search_ports = 2;
                                    cycle_time = 3;
                                    access_time = 3;
                                    access_mode = "normal";
                                };
                            }; // package.core_die.l1cache0.tlb

                            /*************************************
                            L1 Cache Prefetch Buffer:
                            8-byte line size (64-bit address)
                            256 entries
                            tag bits = virtual addreess(64 bits) - set(10 bits) - offset(3 bits)
                            *************************************/
                            prefetch: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 8;
                                    assoc = 0;
                                    size = 256;
                                    tag_width = 51;
                                    num_rw_ports = 2;
                                    num_search_ports = 2;
                                    cycle_time = 2;
                                    access_time = 2;
                                    access_mode = "fast";
                                };
                            }; // package.core_die.l1cache0.prefetch

                            /*************************************
                            L1 Cache Missbuf:
                            8-byte line size (64-bit address)
                            640 entries
                            tag bits = virtual addreess(64 bits) - set(10 bits) - offset(3 bits)
                            *************************************/
                            missbuf: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 8;
                                    assoc = 0;
                                    size = 640;
                                    tag_width = 51;
                                    num_rw_ports = 1;
                                    num_search_ports = 1;
                                    cycle_time = 8;
                                    access_time = 3;
                                    access_mode = "fast";
                                };
                            }; // package.core_die.l1cache0.missbuf

                            /*************************************
                            L1 Cache Linefill:
                            8-byte line size (64-bit address)
                            512 entries
                            tag bits = virtual addreess(64 bits) - set(10 bits) - offset(3 bits)
                            *************************************/
                            linefill: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 8;
                                    assoc = 0;
                                    size = 512;
                                    tag_width = 51;
                                    num_rw_ports = 2;
                                    num_search_ports = 2;
                                    cycle_time = 8;
                                    access_time = 3;
                                    access_mode = "fast";
                                };
                            }; // package.core_die.l1cache0.linefill

                            /*************************************
                            L1 Cache Writeback:
                            8-byte line size (64-bit address)
                            256 entries
                            tag bits = virtual addreess(64 bits) + overhead (5 bits)
                            *************************************/
                            writeback: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 8;
                                    assoc = 0;
                                    size = 256;
                                    tag_width = 51;
                                    num_rw_ports = 2;
                                    num_search_ports = 2;
                                    cycle_time = 3;
                                    access_time = 3;
                                    access_mode = "normal";
                                };
                            }; // package.core_die.l1cache0.writeback

                            /*************************************
                            L1 Cache Undiff
                            *************************************/
                            undiff: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "undiff_core";
                                    pipeline_stages = 32;
                                    issue_width = 6;
                                    scaling = 0.11;
                                };
                            }; // package.core_die.l1cache0.undiff
                        }; // package.core_die.l1cache0.component
                    }; // package.core_die.l1cache0

                    l1cache1: {
                    //pthread_init = true;
                    /*************************************
                    These library settings are commonly
                    applied to l1cache1 components.
                    *************************************/
                        library: {
                            model = "none";
                            feature_size = 16e-9;
                            voltage = 0.8;
                            clock_frequency = 1.0e9;
                            component_type = "core";
                            core_type = "ooo";
                            wire_type = "global";
                            wiring_type = "global";
                            device_type = "hp";
                            interconnect_projection = "aggressive";
                            opt_for_clk = true;
                            embedded = false;
                            longer_channel_device = false;
                            energy_scaling = 3.0;

                            dimension: {
                                left = 3.0e-3;
                                bottom = 0.0e-3;
                                width = 0.5e-3;
                                height = 2.5e-3;
                                die_index = 0;
                                die_name = "core_die";
                            };
                        }; // package.core_die.l1cache1.library

                        /*************************************
                        package.core_die.l1cache1 components
                        *************************************/
                        component: {
                            /*************************************
                            L1 Cache Array:
                            8-byte line size (64-bit address)
                            8-way assoc
                            32KB size
                            1024 sets
                            tag bits = virtual addreess(64 bits) - set(10 bits) - offset(3 bits)
                            *************************************/
                            cache: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 8;
                                    assoc = 8;
                                    size = 32768;
                                    tag_width = 51;
                                    num_rw_ports = 2;
                                    cycle_time = 3;
                                    access_time = 3;
                                    access_mode = "normal";
                                };
                            }; // package.core_die.l1cache1.cache

                            /*************************************
                            L1 Cache TLB:
                            5-byte line size (64-bit address)
                            640 entires
                            4K page size
                            tag bits = virtual addreess(64 bits) - offset (12 bits) + overhead (6 bits)
                            *************************************/
                            tlb: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 5;
                                    assoc = 0;
                                    size = 640;
                                    tag_width = 58;
                                    num_rd_ports = 2;
                                    num_wr_ports = 2;
                                    num_search_ports = 2;
                                    cycle_time = 3;
                                    access_time = 3;
                                    access_mode = "normal";
                                };
                            }; // package.core_die.l1cache1.tlb

                            /*************************************
                            L1 Cache Prefetch Buffer:
                            8-byte line size (64-bit address)
                            256 entries
                            tag bits = virtual addreess(64 bits) - set(10 bits) - offset(3 bits)
                            *************************************/
                            prefetch: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 8;
                                    assoc = 0;
                                    size = 256;
                                    tag_width = 51;
                                    num_rw_ports = 2;
                                    num_search_ports = 2;
                                    cycle_time = 2;
                                    access_time = 2;
                                    access_mode = "fast";
                                };
                            }; // package.core_die.l1cache1.prefetch

                            /*************************************
                            L1 Cache Missbuf:
                            8-byte line size (64-bit address)
                            640 entries
                            tag bits = virtual addreess(64 bits) - set(10 bits) - offset(3 bits)
                            *************************************/
                            missbuf: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 8;
                                    assoc = 0;
                                    size = 640;
                                    tag_width = 51;
                                    num_rw_ports = 1;
                                    num_search_ports = 1;
                                    cycle_time = 8;
                                    access_time = 3;
                                    access_mode = "fast";
                                };
                            }; // package.core_die.l1cache1.missbuf

                            /*************************************
                            L1 Cache Linefill:
                            8-byte line size (64-bit address)
                            512 entries
                            tag bits = virtual addreess(64 bits) - set(10 bits) - offset(3 bits)
                            *************************************/
                            linefill: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 8;
                                    assoc = 0;
                                    size = 512;
                                    tag_width = 51;
                                    num_rw_ports = 2;
                                    num_search_ports = 2;
                                    cycle_time = 8;
                                    access_time = 3;
                                    access_mode = "fast";
                                };
                            }; // package.core_die.l1cache1.linefill

                            /*************************************
                            L1 Cache Writeback:
                            8-byte line size (64-bit address)
                            256 entries
                            tag bits = virtual addreess(64 bits) + overhead (5 bits)
                            *************************************/
                            writeback: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 8;
                                    assoc = 0;
                                    size = 256;
                                    tag_width = 51;
                                    num_rw_ports = 2;
                                    num_search_ports = 2;
                                    cycle_time = 3;
                                    access_time = 3;
                                    access_mode = "normal";
                                };
                            }; // package.core_die.l1cache1.writeback

                            /*************************************
                            L1 Cache Undiff
                            *************************************/
                            undiff: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "undiff_core";
                                    pipeline_stages = 32;
                                    issue_width = 6;
                                    scaling = 0.11;
                                };
                            }; // package.core_die.l1cache1.undiff
                        }; // package.core_die.l1cache1.component
                    }; // package.core_die.l1cache1

                    l1cache2: {
                    //pthread_init = true;
                    /*************************************
                    These library settings are commonly
                    applied to l1cache1 components.
                    *************************************/
                        library: {
                            model = "none";
                            feature_size = 16e-9;
                            voltage = 0.8;
                            clock_frequency = 1.0e9;
                            component_type = "core";
                            core_type = "ooo";
                            wire_type = "global";
                            wiring_type = "global";
                            device_type = "hp";
                            interconnect_projection = "aggressive";
                            opt_for_clk = true;
                            embedded = false;
                            longer_channel_device = false;
                            energy_scaling = 3.0;

                            dimension: {
                                left = 2.5e-3;
                                bottom = 2.5e-3;
                                width = 0.5e-3;
                                height = 2.5e-3;
                                die_index = 0;
                                die_name = "core_die";
                            };
                        }; // package.core_die.l1cache2.library

                        /*************************************
                        package.core_die.l1cache2 components
                        *************************************/
                        component: {
                            /*************************************
                            L1 Cache Array:
                            8-byte line size (64-bit address)
                            8-way assoc
                            32KB size
                            1024 sets
                            tag bits = virtual addreess(64 bits) - set(10 bits) - offset(3 bits)
                            *************************************/
                            cache: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 8;
                                    assoc = 8;
                                    size = 32768;
                                    tag_width = 51;
                                    num_rw_ports = 2;
                                    cycle_time = 3;
                                    access_time = 3;
                                    access_mode = "normal";
                                };
                            }; // package.core_die.l1cache2.cache

                            /*************************************
                            L1 Cache TLB:
                            5-byte line size (64-bit address)
                            640 entires
                            4K page size
                            tag bits = virtual addreess(64 bits) - offset (12 bits) + overhead (6 bits)
                            *************************************/
                            tlb: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 5;
                                    assoc = 0;
                                    size = 640;
                                    tag_width = 58;
                                    num_rd_ports = 2;
                                    num_wr_ports = 2;
                                    num_search_ports = 2;
                                    cycle_time = 3;
                                    access_time = 3;
                                    access_mode = "normal";
                                };
                            }; // package.core_die.l1cache2.tlb

                            /*************************************
                            L1 Cache Prefetch Buffer:
                            8-byte line size (64-bit address)
                            256 entries
                            tag bits = virtual addreess(64 bits) - set(10 bits) - offset(3 bits)
                            *************************************/
                            prefetch: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 8;
                                    assoc = 0;
                                    size = 256;
                                    tag_width = 51;
                                    num_rw_ports = 2;
                                    num_search_ports = 2;
                                    cycle_time = 2;
                                    access_time = 2;
                                    access_mode = "fast";
                                };
                            }; // package.core_die.l1cache2.prefetch

                            /*************************************
                            L1 Cache Missbuf:
                            8-byte line size (64-bit address)
                            640 entries
                            tag bits = virtual addreess(64 bits) - set(10 bits) - offset(3 bits)
                            *************************************/
                            missbuf: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 8;
                                    assoc = 0;
                                    size = 640;
                                    tag_width = 51;
                                    num_rw_ports = 1;
                                    num_search_ports = 1;
                                    cycle_time = 8;
                                    access_time = 3;
                                    access_mode = "fast";
                                };
                            }; // package.core_die.l1cache2.missbuf

                            /*************************************
                            L1 Cache Linefill:
                            8-byte line size (64-bit address)
                            512 entries
                            tag bits = virtual addreess(64 bits) - set(10 bits) - offset(3 bits)
                            *************************************/
                            linefill: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 8;
                                    assoc = 0;
                                    size = 512;
                                    tag_width = 51;
                                    num_rw_ports = 2;
                                    num_search_ports = 2;
                                    cycle_time = 8;
                                    access_time = 3;
                                    access_mode = "fast";
                                };
                            }; // package.core_die.l1cache2.linefill

                            /*************************************
                            L1 Cache Writeback:
                            8-byte line size (64-bit address)
                            256 entries
                            tag bits = virtual addreess(64 bits) + overhead (5 bits)
                            *************************************/
                            writeback: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 8;
                                    assoc = 0;
                                    size = 256;
                                    tag_width = 51;
                                    num_rw_ports = 2;
                                    num_search_ports = 2;
                                    cycle_time = 3;
                                    access_time = 3;
                                    access_mode = "normal";
                                };
                            }; // package.core_die.l1cache2.writeback

                            /*************************************
                            L1 Cache Undiff
                            *************************************/
                            undiff: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "undiff_core";
                                    pipeline_stages = 32;
                                    issue_width = 6;
                                    scaling = 0.11;
                                };
                            }; // package.core_die.l1cache2.undiff
                        }; // package.core_die.l1cache2.component
                    }; // package.core_die.l1cache2

                    l1cache3: {
                    //pthread_init = true;
                    /*************************************
                    These library settings are commonly
                    applied to l1cache1 components.
                    *************************************/
                        library: {
                            model = "none";
                            feature_size = 16e-9;
                            voltage = 0.8;
                            clock_frequency = 1.0e9;
                            component_type = "core";
                            core_type = "ooo";
                            wire_type = "global";
                            wiring_type = "global";
                            device_type = "hp";
                            interconnect_projection = "aggressive";
                            opt_for_clk = true;
                            embedded = false;
                            longer_channel_device = false;
                            energy_scaling = 3.0;

                            dimension: {
                                left = 3.0e-3;
                                bottom = 2.5e-3;
                                width = 0.5e-3;
                                height = 2.5e-3;
                                die_index = 0;
                                die_name = "core_die";
                            };
                        }; // package.core_die.l1cache3.library

                        /*************************************
                        package.core_die.l1cache3 components
                        *************************************/
                        component: {
                            /*************************************
                            L1 Cache Array:
                            8-byte line size (64-bit address)
                            8-way assoc
                            32KB size
                            1024 sets
                            tag bits = virtual addreess(64 bits) - set(10 bits) - offset(3 bits)
                            *************************************/
                            cache: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 8;
                                    assoc = 8;
                                    size = 32768;
                                    tag_width = 51;
                                    num_rw_ports = 2;
                                    cycle_time = 3;
                                    access_time = 3;
                                    access_mode = "normal";
                                };
                            }; // package.core_die.l1cache3.cache

                            /*************************************
                            L1 Cache TLB:
                            5-byte line size (64-bit address)
                            640 entires
                            4K page size
                            tag bits = virtual addreess(64 bits) - offset (12 bits) + overhead (6 bits)
                            *************************************/
                            tlb: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 5;
                                    assoc = 0;
                                    size = 640;
                                    tag_width = 58;
                                    num_rd_ports = 2;
                                    num_wr_ports = 2;
                                    num_search_ports = 2;
                                    cycle_time = 3;
                                    access_time = 3;
                                    access_mode = "normal";
                                };
                            }; // package.core_die.l1cache3.tlb

                            /*************************************
                            L1 Cache Prefetch Buffer:
                            8-byte line size (64-bit address)
                            256 entries
                            tag bits = virtual addreess(64 bits) - set(10 bits) - offset(3 bits)
                            *************************************/
                            prefetch: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 8;
                                    assoc = 0;
                                    size = 256;
                                    tag_width = 51;
                                    num_rw_ports = 2;
                                    num_search_ports = 2;
                                    cycle_time = 2;
                                    access_time = 2;
                                    access_mode = "fast";
                                };
                            }; // package.core_die.l1cache3.prefetch

                            /*************************************
                            L1 Cache Missbuf:
                            8-byte line size (64-bit address)
                            640 entries
                            tag bits = virtual addreess(64 bits) - set(10 bits) - offset(3 bits)
                            *************************************/
                            missbuf: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 8;
                                    assoc = 0;
                                    size = 640;
                                    tag_width = 51;
                                    num_rw_ports = 1;
                                    num_search_ports = 1;
                                    cycle_time = 8;
                                    access_time = 3;
                                    access_mode = "fast";
                                };
                            }; // package.core_die.l1cache3.missbuf

                            /*************************************
                            L1 Cache Linefill:
                            8-byte line size (64-bit address)
                            512 entries
                            tag bits = virtual addreess(64 bits) - set(10 bits) - offset(3 bits)
                            *************************************/
                            linefill: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 8;
                                    assoc = 0;
                                    size = 512;
                                    tag_width = 51;
                                    num_rw_ports = 2;
                                    num_search_ports = 2;
                                    cycle_time = 8;
                                    access_time = 3;
                                    access_mode = "fast";
                                };
                            }; // package.core_die.l1cache3.linefill

                            /*************************************
                            L1 Cache Writeback:
                            8-byte line size (64-bit address)
                            256 entries
                            tag bits = virtual addreess(64 bits) + overhead (5 bits)
                            *************************************/
                            writeback: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 8;
                                    assoc = 0;
                                    size = 256;
                                    tag_width = 51;
                                    num_rw_ports = 2;
                                    num_search_ports = 2;
                                    cycle_time = 3;
                                    access_time = 3;
                                    access_mode = "normal";
                                };
                            }; // package.core_die.l1cache3.writeback

                            /*************************************
                            L1 Cache Undiff
                            *************************************/
                            undiff: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "undiff_core";
                                    pipeline_stages = 32;
                                    issue_width = 6;
                                    scaling = 0.11;
                                };
                            }; // package.core_die.l1cache3.undiff
                        }; // package.core_die.l1cache3.component
                    }; // package.core_die.l1cache3

                }; /* End of "package.core_die" sub-components */
            }; /* End of "package.core_die" */


            /* "package.llc_die" component */
            llc_die: {
                /* "package.llc_die" includes the following components
                   as its sub-components (children). */
                component: {

                    cache0: {
                    //pthread_init = true;
                    /*************************************
                    These library settings are commonly
                    applied to l1cache1 components.
                    *************************************/
                        library: {
                            model = "none";
                            feature_size = 16e-9;
                            voltage = 0.8;
                            clock_frequency = 1.0e9;
                            component_type = "llc";
                            wire_type = "global";
                            wiring_type = "global";
                            device_type = "hp";
                            interconnect_projection = "aggressive";
                            longer_channel_device = false;
                            energy_scaling = 2.0;

                            dimension: {
                                left = 0.0e-3;
                                bottom = 0.0e-3;
                                width = 3.0e-3;
                                height = 2.5e-3;
                                die_index = 1;
                                die_name = "llc_die";
                            };
                        }; // package.llc_die.cache0.library

                        /*************************************
                        package.llc_die.cache0 components
                        *************************************/
                        component: {
                            /*************************************
                            LLC Cache Array:
                            8-byte line size (64-bit address)
                            16-way assoc
                            2MB size
                            16K sets
                            tag bits = virtual addreess(64 bits) - set(14 bits) - offset(3 bits)
                            *************************************/
                            cache: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 8;
                                    assoc = 16;
                                    nbanks = 16;
                                    size = 2097152;
                                    tag_width = 47;
                                    num_rw_ports = 1;
                                    cycle_time = 100;
                                    access_time = 35;
                                    access_mode = "sequential";
                                };
                            }; // package.llc_die.cache0.cache

                            /*************************************
                            LLC Cache TLB:
                            5-byte line size (64-bit address)
                            0 entires
                            tag bits = virtual addreess(64 bits) - page offset (12 bits) + overhead (6 bits)
                            *************************************/
                            tlb: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 5;
                                    assoc = 0;
                                    size = 1;
                                    tag_width = 58;
                                    num_rw_ports = 1;
                                    num_search_ports = 1;
                                    cycle_time = 35;
                                    access_time = 35;
                                    access_mode = "normal";
                                };
                            }; // package.llc_die.cache0.tlb

                            /*************************************
                            LLC Cache Prefetch Buffer:
                            8-byte line size (64-bit address)
                            1024 entries
                            tag bits = virtual addreess(64 bits) - set(14 bits) - offset(3 bits)
                            *************************************/
                            prefetch: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 8;
                                    assoc = 0;
                                    size = 1024;
                                    tag_width = 47;
                                    num_rw_ports = 1;
                                    num_search_ports = 1;
                                    cycle_time = 35;
                                    access_time = 35;
                                    access_mode = "normal";
                                };
                            }; // package.llc_die.cache0.prefetch

                            /*************************************
                            LLC Cache Missbuf:
                            8-byte line size (64-bit address)
                            272 entries
                            tag bits = virtual addreess(64 bits) - set(14 bits) - offset(3 bits)
                            *************************************/
                            missbuf: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 8;
                                    assoc = 0;
                                    size = 640;
                                    tag_width = 47;
                                    num_rw_ports = 1;
                                    num_search_ports = 1;
                                    cycle_time = 16;
                                    access_time = 35;
                                    access_mode = "normal";
                                };
                            }; // package.llc_die.cache0.missbuf

                            /*************************************
                            LLC Cache Linefill:
                            8-byte line size (64-bit address)
                            1024 entries
                            tag bits = virtual addreess(64 bits) - set(14 bits) - offset(3 bits)
                            *************************************/
                            linefill: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 8;
                                    assoc = 0;
                                    size = 1024;
                                    tag_width = 47;
                                    num_rw_ports = 1;
                                    num_search_ports = 1;
                                    cycle_time = 16;
                                    access_time = 35;
                                    access_mode = "normal";
                                };
                            }; // package.llc_die.cache0.linefill

                            /*************************************
                            L1 Cache Writeback:
                            8-byte line size (64-bit address)
                            1024 entries
                            tag bits = virtual addreess(64 bits) + overhead (5 bits)
                            *************************************/
                            writeback: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 8;
                                    assoc = 0;
                                    size = 256;
                                    tag_width = 47;
                                    num_rw_ports = 1;
                                    num_search_ports = 1;
                                    cycle_time = 16;
                                    access_time = 35;
                                    access_mode = "normal";
                                };
                            }; // package.llc_die.cache0.writeback

                            /*************************************
                            LLC Cache Undiff
                            *************************************/
                            undiff: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "undiff_core";
                                    pipeline_stages = 32;
                                    issue_width = 6;
                                    scaling = 0.48;
                                };
                            }; // package.llc_die.cache0.undiff
                        }; // package.llc_die.cache0.component
                    }; // package.llc_die.cache0

                    cache1: {
                    //pthread_init = true;
                    /*************************************
                    These library settings are commonly
                    applied to l1cache1 components.
                    *************************************/
                        library: {
                            model = "none";
                            feature_size = 16e-9;
                            voltage = 0.8;
                            clock_frequency = 1.0e9;
                            component_type = "llc";
                            wire_type = "global";
                            wiring_type = "global";
                            device_type = "hp";
                            interconnect_projection = "aggressive";
                            longer_channel_device = false;
                            energy_scaling = 2.0;

                            dimension: {
                                left = 3.0e-3;
                                bottom = 0.0e-3;
                                width = 3.0e-3;
                                height = 2.5e-3;
                                die_index = 1;
                                die_name = "llc_die";
                            };
                        }; // package.llc_die.cache1.library

                        /*************************************
                        package.llc_die.cache1 components
                        *************************************/
                        component: {
                            /*************************************
                            LLC Cache Array:
                            8-byte line size (64-bit address)
                            16-way assoc
                            2MB size
                            16K sets
                            tag bits = virtual addreess(64 bits) - set(14 bits) - offset(3 bits)
                            *************************************/
                            cache: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 8;
                                    assoc = 16;
                                    nbanks = 16;
                                    size = 2097152;
                                    tag_width = 47;
                                    num_rw_ports = 1;
                                    cycle_time = 100;
                                    access_time = 35;
                                    access_mode = "sequential";
                                };
                            }; // package.llc_die.cache1.cache

                            /*************************************
                            LLC Cache TLB:
                            5-byte line size (64-bit address)
                            0 entires
                            tag bits = virtual addreess(64 bits) - page offset (12 bits) + overhead (6 bits)
                            *************************************/
                            tlb: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 5;
                                    assoc = 0;
                                    size = 1;
                                    tag_width = 58;
                                    num_rw_ports = 1;
                                    num_search_ports = 1;
                                    cycle_time = 35;
                                    access_time = 35;
                                    access_mode = "normal";
                                };
                            }; // package.llc_die.cache1.tlb

                            /*************************************
                            LLC Cache Prefetch Buffer:
                            8-byte line size (64-bit address)
                            1024 entries
                            tag bits = virtual addreess(64 bits) - set(14 bits) - offset(3 bits)
                            *************************************/
                            prefetch: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 8;
                                    assoc = 0;
                                    size = 1024;
                                    tag_width = 47;
                                    num_rw_ports = 1;
                                    num_search_ports = 1;
                                    cycle_time = 35;
                                    access_time = 35;
                                    access_mode = "normal";
                                };
                            }; // package.llc_die.cache1.prefetch

                            /*************************************
                            LLC Cache Missbuf:
                            8-byte line size (64-bit address)
                            272 entries
                            tag bits = virtual addreess(64 bits) - set(14 bits) - offset(3 bits)
                            *************************************/
                            missbuf: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 8;
                                    assoc = 0;
                                    size = 640;
                                    tag_width = 47;
                                    num_rw_ports = 1;
                                    num_search_ports = 1;
                                    cycle_time = 16;
                                    access_time = 35;
                                    access_mode = "normal";
                                };
                            }; // package.llc_die.cache1.missbuf

                            /*************************************
                            LLC Cache Linefill:
                            8-byte line size (64-bit address)
                            1024 entries
                            tag bits = virtual addreess(64 bits) - set(14 bits) - offset(3 bits)
                            *************************************/
                            linefill: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 8;
                                    assoc = 0;
                                    size = 1024;
                                    tag_width = 47;
                                    num_rw_ports = 1;
                                    num_search_ports = 1;
                                    cycle_time = 16;
                                    access_time = 35;
                                    access_mode = "normal";
                                };
                            }; // package.llc_die.cache1.linefill

                            /*************************************
                            L1 Cache Writeback:
                            8-byte line size (64-bit address)
                            1024 entries
                            tag bits = virtual addreess(64 bits) + overhead (5 bits)
                            *************************************/
                            writeback: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 8;
                                    assoc = 0;
                                    size = 256;
                                    tag_width = 47;
                                    num_rw_ports = 1;
                                    num_search_ports = 1;
                                    cycle_time = 16;
                                    access_time = 35;
                                    access_mode = "normal";
                                };
                            }; // package.llc_die.cache1.writeback

                            /*************************************
                            LLC Cache Undiff
                            *************************************/
                            undiff: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "undiff_core";
                                    pipeline_stages = 32;
                                    issue_width = 6;
                                    scaling = 0.48;
                                };
                            }; // package.llc_die.cache1.undiff
                        }; // package.llc_die.cache1.component
                    }; // package.llc_die.cache1

                    cache2: {
                    //pthread_init = true;
                    /*************************************
                    These library settings are commonly
                    applied to l1cache1 components.
                    *************************************/
                        library: {
                            model = "none";
                            feature_size = 16e-9;
                            voltage = 0.8;
                            clock_frequency = 1.0e9;
                            component_type = "llc";
                            wire_type = "global";
                            wiring_type = "global";
                            device_type = "hp";
                            interconnect_projection = "aggressive";
                            longer_channel_device = false;
                            energy_scaling = 2.0;

                            dimension: {
                                left = 0.0e-3;
                                bottom = 2.5e-3;
                                width = 3.0e-3;
                                height = 2.5e-3;
                                die_index = 1;
                                die_name = "llc_die";
                            };
                        }; // package.llc_die.cache2.library

                        /*************************************
                        package.llc_die.cache2 components
                        *************************************/
                        component: {
                            /*************************************
                            LLC Cache Array:
                            8-byte line size (64-bit address)
                            16-way assoc
                            2MB size
                            16K sets
                            tag bits = virtual addreess(64 bits) - set(14 bits) - offset(3 bits)
                            *************************************/
                            cache: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 8;
                                    assoc = 16;
                                    nbanks = 16;
                                    size = 2097152;
                                    tag_width = 47;
                                    num_rw_ports = 1;
                                    cycle_time = 100;
                                    access_time = 35;
                                    access_mode = "sequential";
                                };
                            }; // package.llc_die.cache2.cache

                            /*************************************
                            LLC Cache TLB:
                            5-byte line size (64-bit address)
                            0 entires
                            tag bits = virtual addreess(64 bits) - page offset (12 bits) + overhead (6 bits)
                            *************************************/
                            tlb: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 5;
                                    assoc = 0;
                                    size = 1;
                                    tag_width = 58;
                                    num_rw_ports = 1;
                                    num_search_ports = 1;
                                    cycle_time = 35;
                                    access_time = 35;
                                    access_mode = "normal";
                                };
                            }; // package.llc_die.cache2.tlb

                            /*************************************
                            LLC Cache Prefetch Buffer:
                            8-byte line size (64-bit address)
                            1024 entries
                            tag bits = virtual addreess(64 bits) - set(14 bits) - offset(3 bits)
                            *************************************/
                            prefetch: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 8;
                                    assoc = 0;
                                    size = 1024;
                                    tag_width = 47;
                                    num_rw_ports = 1;
                                    num_search_ports = 1;
                                    cycle_time = 35;
                                    access_time = 35;
                                    access_mode = "normal";
                                };
                            }; // package.llc_die.cache2.prefetch

                            /*************************************
                            LLC Cache Missbuf:
                            8-byte line size (64-bit address)
                            272 entries
                            tag bits = virtual addreess(64 bits) - set(14 bits) - offset(3 bits)
                            *************************************/
                            missbuf: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 8;
                                    assoc = 0;
                                    size = 640;
                                    tag_width = 47;
                                    num_rw_ports = 1;
                                    num_search_ports = 1;
                                    cycle_time = 16;
                                    access_time = 35;
                                    access_mode = "normal";
                                };
                            }; // package.llc_die.cache2.missbuf

                            /*************************************
                            LLC Cache Linefill:
                            8-byte line size (64-bit address)
                            1024 entries
                            tag bits = virtual addreess(64 bits) - set(14 bits) - offset(3 bits)
                            *************************************/
                            linefill: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 8;
                                    assoc = 0;
                                    size = 1024;
                                    tag_width = 47;
                                    num_rw_ports = 1;
                                    num_search_ports = 1;
                                    cycle_time = 16;
                                    access_time = 35;
                                    access_mode = "normal";
                                };
                            }; // package.llc_die.cache2.linefill

                            /*************************************
                            L1 Cache Writeback:
                            8-byte line size (64-bit address)
                            1024 entries
                            tag bits = virtual addreess(64 bits) + overhead (5 bits)
                            *************************************/
                            writeback: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 8;
                                    assoc = 0;
                                    size = 256;
                                    tag_width = 47;
                                    num_rw_ports = 1;
                                    num_search_ports = 1;
                                    cycle_time = 16;
                                    access_time = 35;
                                    access_mode = "normal";
                                };
                            }; // package.llc_die.cache2.writeback

                            /*************************************
                            LLC Cache Undiff
                            *************************************/
                            undiff: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "undiff_core";
                                    pipeline_stages = 32;
                                    issue_width = 6;
                                    scaling = 0.48;
                                };
                            }; // package.llc_die.cache2.undiff
                        }; // package.llc_die.cache2.component
                    }; // package.llc_die.cache2

                    cache3: {
                    //pthread_init = true;
                    /*************************************
                    These library settings are commonly
                    applied to l1cache1 components.
                    *************************************/
                        library: {
                            model = "none";
                            feature_size = 16e-9;
                            voltage = 0.8;
                            clock_frequency = 1.0e9;
                            component_type = "llc";
                            wire_type = "global";
                            wiring_type = "global";
                            device_type = "hp";
                            interconnect_projection = "aggressive";
                            longer_channel_device = false;
                            energy_scaling = 2.0;

                            dimension: {
                                left = 3.0e-3;
                                bottom = 2.5e-3;
                                width = 3.0e-3;
                                height = 2.5e-3;
                                die_index = 1;
                                die_name = "llc_die";
                            };
                        }; // package.llc_die.cache3.library

                        /*************************************
                        package.llc_die.cache3 components
                        *************************************/
                        component: {
                            /*************************************
                            LLC Cache Array:
                            8-byte line size (64-bit address)
                            16-way assoc
                            2MB size
                            16K sets
                            tag bits = virtual addreess(64 bits) - set(14 bits) - offset(3 bits)
                            *************************************/
                            cache: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 8;
                                    assoc = 16;
                                    nbanks = 16;
                                    size = 2097152;
                                    tag_width = 47;
                                    num_rw_ports = 1;
                                    cycle_time = 100;
                                    access_time = 35;
                                    access_mode = "sequential";
                                };
                            }; // package.llc_die.cache3.cache

                            /*************************************
                            LLC Cache TLB:
                            5-byte line size (64-bit address)
                            1 entires
                            tag bits = virtual addreess(64 bits) - page offset (12 bits) + overhead (6 bits)
                            *************************************/
                            tlb: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 5;
                                    assoc = 0;
                                    size = 1;
                                    tag_width = 58;
                                    num_rw_ports = 1;
                                    num_search_ports = 1;
                                    cycle_time = 35;
                                    access_time = 35;
                                    access_mode = "normal";
                                };
                            }; // package.llc_die.cache3.tlb

                            /*************************************
                            LLC Cache Prefetch Buffer:
                            8-byte line size (64-bit address)
                            1024 entries
                            tag bits = virtual addreess(64 bits) - set(14 bits) - offset(3 bits)
                            *************************************/
                            prefetch: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 8;
                                    assoc = 0;
                                    size = 1024;
                                    tag_width = 47;
                                    num_rw_ports = 1;
                                    num_search_ports = 1;
                                    cycle_time = 35;
                                    access_time = 35;
                                    access_mode = "normal";
                                };
                            }; // package.llc_die.cache3.prefetch

                            /*************************************
                            LLC Cache Missbuf:
                            8-byte line size (64-bit address)
                            272 entries
                            tag bits = virtual addreess(64 bits) - set(14 bits) - offset(3 bits)
                            *************************************/
                            missbuf: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 8;
                                    assoc = 0;
                                    size = 640;
                                    tag_width = 47;
                                    num_rw_ports = 1;
                                    num_search_ports = 1;
                                    cycle_time = 16;
                                    access_time = 35;
                                    access_mode = "normal";
                                };
                            }; // package.llc_die.cache3.missbuf

                            /*************************************
                            LLC Cache Linefill:
                            8-byte line size (64-bit address)
                            1024 entries
                            tag bits = virtual addreess(64 bits) - set(14 bits) - offset(3 bits)
                            *************************************/
                            linefill: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 8;
                                    assoc = 0;
                                    size = 1024;
                                    tag_width = 47;
                                    num_rw_ports = 1;
                                    num_search_ports = 1;
                                    cycle_time = 16;
                                    access_time = 35;
                                    access_mode = "normal";
                                };
                            }; // package.llc_die.cache3.linefill

                            /*************************************
                            L1 Cache Writeback:
                            8-byte line size (64-bit address)
                            1024 entries
                            tag bits = virtual addreess(64 bits) + overhead (5 bits)
                            *************************************/
                            writeback: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "array";
                                    energy_submodel = "cache";
                                    line_size = 8;
                                    assoc = 0;
                                    size = 256;
                                    tag_width = 47;
                                    num_rw_ports = 1;
                                    num_search_ports = 1;
                                    cycle_time = 16;
                                    access_time = 35;
                                    access_mode = "normal";
                                };
                            }; // package.llc_die.cache3.writeback

                            /*************************************
                            LLC Cache Undiff
                            *************************************/
                            undiff: {
                                library: {
                                    model = "mcpat";
                                    energy_model = "undiff_core";
                                    pipeline_stages = 32;
                                    issue_width = 6;
                                    scaling = 0.48;
                                };
                            }; // package.llc_die.cache3.undiff
                        }; // package.llc_die.cache3.component
                    }; // package.llc_die.cache3

                }; /* End of "package.llc_die" sub-components */
            }; /* End of "package.llc_die" */


        }; /* End of package sub-components */
    }; // package
}; // config.component
