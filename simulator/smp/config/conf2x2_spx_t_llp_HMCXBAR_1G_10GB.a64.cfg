simulation_stop = 1e9;
default_clock = 1e9;
qsim_interrupt_handler_clock = 1e3;
kitfox_config = "../config/kitfox-4core.config";
kitfox_freq = 1000;
max_vaults = 32;
max_serdes = 4;
num_pkgs = 2;

network:
{
    topology = "TORUS";
    x_dimension = 2;
    y_dimension = 4;
    num_vcs = 4;
    credits = 6;
    link_width = 128;

    ni_up_credits = 20; //credits for network interface sending to terminal
    ni_up_buffer = 5; //network interface's output buffer (to terminal) size

    coh_msg_type = 123; //message types
    mem_msg_type = 456;
    credit_msg_type = 789;
};

processor:
{
    type = "SPX";
    node_idx = [0, 1, 2, 3];
    clocks = [1e9, 1e9, 1e9, 1e9];
    config = "../config/spx-outorder.a64.config";
    state = "../state/state.4.a64"
};

llp_cache:
{
    name = "L1";
    type = "DATA";
    size = 0x8000; //32K
    assoc = 8;
    block_size = 32;
    hit_time = 3;
    lookup_time = 3;
    replacement_policy = "LRU";
    mshr_size = 8;

    downstream_credits = 20; //credits for sending to network
};

lls_cache:
{
    name = "L2";
    type = "DATA";
    size = 0x200000; // 2MB
    assoc = 16;
    block_size = 32;
    hit_time = 35;
    lookup_time = 100;
    replacement_policy = "LRU";
    mshr_size = 32;

    downstream_credits = 20; //credits for sending to network
};

mc: //hmc unit with memory controllers for each vault
{
	type = "HMC";	
	trans_size = 32; // Transaction byte size. Must be equal to cache line size
    num_vaults = 32; // Total number of vaults for the HMC. Can be 16 or 32
	kitfox_hmc0 = "../config/HMC_logic_layer_4SerDes1.config";
    
	serdes: //serdes for hmc
	{
		node_idx = [0, 1, 2, 3];
		//0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31]; //node ids of all serdes links
		//Changing the ending number here affects MAX_NODES in sysBuilder_llp_HUT.cpp
		//Changing the starting number affects pkt_generator.cpp
		num_links = 4;
		rx_tx_line_width = 16;
		req_flit_size = 1; //1FLIT is 16Bytes
		resp_flit_size = 3;
		clocks = [10e9, 10e9, 10e9, 10e9];
		downstream_credits = 20;	// Credits to send to network/LLC
		upstream_credits = 20;		// Credits to send to xbar
	};
    
	xbar: //cross-bars for hmc
    {
		clocks = [5e9];
        downstream_credits = 20; //credits for sending to serdes
		upstream_credits = 20; //credits for sending to vault
    };
     
    vault: //each vault is a dramsim2 instance
    {
        dev_file = "../config/3d_die_HMC.ini";
        sys_file = "../config/3d_die_HMC.ini.example";
        layers = 4;
        size = 128; // 128MB per vault => 4GB for 32 vaults with 4 layers
		    		// 256MB per vault => 8GB for 32 vaults with 4 layers
		downstream_credits = 20; //credits for sending to xbar
		clocks = [1.25e9]; //one clock for each HMC instance
    };
};

